{"version":3,"file":"easing.js","sourceRoot":"","sources":["../../../sourceES6/core/Animations/easing.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAmBjD;;;GAGG;AACH;IAAA;QAgBY,gBAAW,GAAG,cAAc,CAAC,iBAAiB,CAAC;IA6C3D,CAAC;IA3CG;;;OAGG;IACI,sCAAa,GAApB,UAAqB,UAAkB;QACnC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,CAAC;IACD;;;OAGG;IACI,sCAAa,GAApB;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;OAEG;IACI,mCAAU,GAAjB,UAAkB,QAAgB;QAC9B,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACtD,CAAC;IAED;;;;;OAKG;IACI,6BAAI,GAAX,UAAY,QAAgB;QACxB,QAAQ,IAAI,CAAC,WAAW,EAAE;YACtB,KAAK,cAAc,CAAC,iBAAiB;gBACjC,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,KAAK,cAAc,CAAC,kBAAkB;gBAClC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;SAClD;QAED,IAAI,QAAQ,IAAI,GAAG,EAAE;YACjB,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SACpE;QAED,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACjD,CAAC;IA3DD;;OAEG;IACoB,gCAAiB,GAAG,CAAC,CAAC;IAE7C;;OAEG;IACoB,iCAAkB,GAAG,CAAC,CAAC;IAE9C;;OAEG;IACoB,mCAAoB,GAAG,CAAC,CAAC;IA+CpD,qBAAC;CAAA,AA7DD,IA6DC;SA7DY,cAAc;AA+D3B;;;;GAIG;AACH;IAAgC,8BAAc;IAA9C;;IAMA,CAAC;IALG,cAAc;IACP,+BAAU,GAAjB,UAAkB,QAAgB;QAC9B,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IACL,iBAAC;AAAD,CAAC,AAND,CAAgC,cAAc,GAM7C;;AAED;;;;GAIG;AACH;IAA8B,4BAAc;IACxC;;;;OAIG;IACH;IACI,4CAA4C;IACrC,SAAqB;QAArB,0BAAA,EAAA,aAAqB;QAFhC,YAGI,iBAAO,SACV;QAFU,eAAS,GAAT,SAAS,CAAY;;IAEhC,CAAC;IAED,cAAc;IACP,6BAAU,GAAjB,UAAkB,QAAgB;QAC9B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpG,CAAC;IACL,eAAC;AAAD,CAAC,AAjBD,CAA8B,cAAc,GAiB3C;;AAED;;;;GAIG;AACH;IAAgC,8BAAc;IAC1C;;;;;OAKG;IACH;IACI,oCAAoC;IAC7B,OAAmB;IAC1B,0CAA0C;IACnC,UAAsB;QAFtB,wBAAA,EAAA,WAAmB;QAEnB,2BAAA,EAAA,cAAsB;QAJjC,YAKI,iBAAO,SACV;QAJU,aAAO,GAAP,OAAO,CAAY;QAEnB,gBAAU,GAAV,UAAU,CAAY;;IAEjC,CAAC;IAED,cAAc;IACP,+BAAU,GAAjB,UAAkB,QAAgB;QAC9B,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,IAAI,UAAU,IAAI,GAAG,EAAE;YACnB,UAAU,GAAG,KAAK,CAAC;SACtB;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QACnC,IAAI,IAAI,GAAG,GAAG,GAAG,UAAU,CAAC;QAC5B,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;QAChD,IAAI,KAAK,GAAG,QAAQ,GAAG,IAAI,CAAC;QAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACjF,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC;QACvB,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QAC9D,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QAChE,IAAI,IAAI,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;QAChC,IAAI,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC;QAC3B,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;QACvB,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,UAAU,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;IACvG,CAAC;IACL,iBAAC;AAAD,CAAC,AApCD,CAAgC,cAAc,GAoC7C;;AAED;;;;GAIG;AACH;IAA+B,6BAAc;IAA7C;;IAKA,CAAC;IAJG,cAAc;IACP,8BAAU,GAAjB,UAAkB,QAAgB;QAC9B,OAAO,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;IAC5C,CAAC;IACL,gBAAC;AAAD,CAAC,AALD,CAA+B,cAAc,GAK5C;;AAED;;;;GAIG;AACH;IAAiC,+BAAc;IAC3C;;;;;OAKG;IACH;IACI,wCAAwC;IACjC,YAAwB;IAC/B,+CAA+C;IACxC,WAAuB;QAFvB,6BAAA,EAAA,gBAAwB;QAExB,4BAAA,EAAA,eAAuB;QAJlC,YAKI,iBAAO,SACV;QAJU,kBAAY,GAAZ,YAAY,CAAY;QAExB,iBAAW,GAAX,WAAW,CAAY;;IAElC,CAAC;IAED,cAAc;IACP,gCAAU,GAAjB,UAAkB,QAAgB;QAC9B,IAAI,IAAI,CAAC;QACT,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAE1C,IAAI,GAAG,IAAI,CAAC,EAAE;YACV,IAAI,GAAG,QAAQ,CAAC;SACnB;aAAM;YACH,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SACnE;QACD,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,kBAAkB,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;IAC5F,CAAC;IACL,kBAAC;AAAD,CAAC,AA5BD,CAAiC,cAAc,GA4B9C;;AAED;;;;GAIG;AACH;IAAqC,mCAAc;IAC/C;;;;OAIG;IACH;IACI,2CAA2C;IACpC,QAAoB;QAApB,yBAAA,EAAA,YAAoB;QAF/B,YAGI,iBAAO,SACV;QAFU,cAAQ,GAAR,QAAQ,CAAY;;IAE/B,CAAC;IAED,cAAc;IACP,oCAAU,GAAjB,UAAkB,QAAgB;QAC9B,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;YACpB,OAAO,QAAQ,CAAC;SACnB;QAED,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC1F,CAAC;IACL,sBAAC;AAAD,CAAC,AApBD,CAAqC,cAAc,GAoBlD;;AAED;;;;GAIG;AACH;IAA+B,6BAAc;IACzC;;;;OAIG;IACH;IACI,wCAAwC;IACjC,KAAiB;QAAjB,sBAAA,EAAA,SAAiB;QAF5B,YAGI,iBAAO,SACV;QAFU,WAAK,GAAL,KAAK,CAAY;;IAE5B,CAAC;IAED,cAAc;IACP,8BAAU,GAAjB,UAAkB,QAAgB;QAC9B,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IACL,gBAAC;AAAD,CAAC,AAjBD,CAA+B,cAAc,GAiB5C;;AAED;;;;GAIG;AACH;IAAmC,iCAAc;IAAjD;;IAKA,CAAC;IAJG,cAAc;IACP,kCAAU,GAAjB,UAAkB,QAAgB;QAC9B,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;IACjC,CAAC;IACL,oBAAC;AAAD,CAAC,AALD,CAAmC,cAAc,GAKhD;;AAED;;;;GAIG;AACH;IAAiC,+BAAc;IAA/C;;IAKA,CAAC;IAJG,cAAc;IACP,gCAAU,GAAjB,UAAkB,QAAgB;QAC9B,OAAO,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;IACvD,CAAC;IACL,kBAAC;AAAD,CAAC,AALD,CAAiC,cAAc,GAK9C;;AAED;;;;GAIG;AACH;IAAiC,+BAAc;IAA/C;;IAKA,CAAC;IAJG,cAAc;IACP,gCAAU,GAAjB,UAAkB,QAAgB;QAC9B,OAAO,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;IAClE,CAAC;IACL,kBAAC;AAAD,CAAC,AALD,CAAiC,cAAc,GAK9C;;AAED;;;;GAIG;AACH;IAA8B,4BAAc;IAA5C;;IAKA,CAAC;IAJG,cAAc;IACP,6BAAU,GAAjB,UAAkB,QAAgB;QAC9B,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IACL,eAAC;AAAD,CAAC,AALD,CAA8B,cAAc,GAK3C;;AAED;;;;GAIG;AACH;IAAqC,mCAAc;IAC/C;;;;;;;OAOG;IACH;IACI,uEAAuE;IAChE,EAAc;IACrB,uEAAuE;IAChE,EAAc;IACrB,qEAAqE;IAC9D,EAAc;IACrB,qEAAqE;IAC9D,EAAc;QANd,mBAAA,EAAA,MAAc;QAEd,mBAAA,EAAA,MAAc;QAEd,mBAAA,EAAA,MAAc;QAEd,mBAAA,EAAA,MAAc;QARzB,YASI,iBAAO,SACV;QARU,QAAE,GAAF,EAAE,CAAY;QAEd,QAAE,GAAF,EAAE,CAAY;QAEd,QAAE,GAAF,EAAE,CAAY;QAEd,QAAE,GAAF,EAAE,CAAY;;IAEzB,CAAC;IAED,cAAc;IACP,oCAAU,GAAjB,UAAkB,QAAgB;QAC9B,OAAO,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IACjF,CAAC;IACL,sBAAC;AAAD,CAAC,AAzBD,CAAqC,cAAc,GAyBlD","sourcesContent":["import { BezierCurve } from \"../Maths/math.path\";\r\n\r\n/**\r\n * This represents the main contract an easing function should follow.\r\n * Easing functions are used throughout the animation system.\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport interface IEasingFunction {\r\n    /**\r\n     * Given an input gradient between 0 and 1, this returns the corrseponding value\r\n     * of the easing function.\r\n     * The link below provides some of the most common examples of easing functions.\r\n     * @see https://easings.net/\r\n     * @param gradient Defines the value between 0 and 1 we want the easing value for\r\n     * @returns the corresponding value on the curve defined by the easing function\r\n     */\r\n    ease(gradient: number): number;\r\n}\r\n\r\n/**\r\n * Base class used for every default easing function.\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class EasingFunction implements IEasingFunction {\r\n    /**\r\n     * Interpolation follows the mathematical formula associated with the easing function.\r\n     */\r\n    public static readonly EASINGMODE_EASEIN = 0;\r\n\r\n    /**\r\n     * Interpolation follows 100% interpolation minus the output of the formula associated with the easing function.\r\n     */\r\n    public static readonly EASINGMODE_EASEOUT = 1;\r\n\r\n    /**\r\n     * Interpolation uses EaseIn for the first half of the animation and EaseOut for the second half.\r\n     */\r\n    public static readonly EASINGMODE_EASEINOUT = 2;\r\n\r\n    private _easingMode = EasingFunction.EASINGMODE_EASEIN;\r\n\r\n    /**\r\n     * Sets the easing mode of the current function.\r\n     * @param easingMode Defines the willing mode (EASINGMODE_EASEIN, EASINGMODE_EASEOUT or EASINGMODE_EASEINOUT)\r\n     */\r\n    public setEasingMode(easingMode: number) {\r\n        var n = Math.min(Math.max(easingMode, 0), 2);\r\n        this._easingMode = n;\r\n    }\r\n    /**\r\n     * Gets the current easing mode.\r\n     * @returns the easing mode\r\n     */\r\n    public getEasingMode(): number {\r\n        return this._easingMode;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    public easeInCore(gradient: number): number {\r\n        throw new Error('You must implement this method');\r\n    }\r\n\r\n    /**\r\n     * Given an input gradient between 0 and 1, this returns the corresponding value\r\n     * of the easing function.\r\n     * @param gradient Defines the value between 0 and 1 we want the easing value for\r\n     * @returns the corresponding value on the curve defined by the easing function\r\n     */\r\n    public ease(gradient: number): number {\r\n        switch (this._easingMode) {\r\n            case EasingFunction.EASINGMODE_EASEIN:\r\n                return this.easeInCore(gradient);\r\n            case EasingFunction.EASINGMODE_EASEOUT:\r\n                return (1 - this.easeInCore(1 - gradient));\r\n        }\r\n\r\n        if (gradient >= 0.5) {\r\n            return (((1 - this.easeInCore((1 - gradient) * 2)) * 0.5) + 0.5);\r\n        }\r\n\r\n        return (this.easeInCore(gradient * 2) * 0.5);\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with a circle shape (see link below).\r\n * @see https://easings.net/#easeInCirc\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class CircleEase extends EasingFunction implements IEasingFunction {\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        gradient = Math.max(0, Math.min(1, gradient));\r\n        return (1.0 - Math.sqrt(1.0 - (gradient * gradient)));\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with a ease back shape (see link below).\r\n * @see https://easings.net/#easeInBack\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class BackEase extends EasingFunction implements IEasingFunction {\r\n    /**\r\n     * Instantiates a back ease easing\r\n     * @see https://easings.net/#easeInBack\r\n     * @param amplitude Defines the amplitude of the function\r\n     */\r\n    constructor(\r\n        /** Defines the amplitude of the function */\r\n        public amplitude: number = 1) {\r\n        super();\r\n    }\r\n\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        var num = Math.max(0, this.amplitude);\r\n        return (Math.pow(gradient, 3.0) - ((gradient * num) * Math.sin(3.1415926535897931 * gradient)));\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with a bouncing shape (see link below).\r\n * @see https://easings.net/#easeInBounce\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class BounceEase extends EasingFunction implements IEasingFunction {\r\n    /**\r\n     * Instantiates a bounce easing\r\n     * @see https://easings.net/#easeInBounce\r\n     * @param bounces Defines the number of bounces\r\n     * @param bounciness Defines the amplitude of the bounce\r\n     */\r\n    constructor(\r\n        /** Defines the number of bounces */\r\n        public bounces: number = 3,\r\n        /** Defines the amplitude of the bounce */\r\n        public bounciness: number = 2) {\r\n        super();\r\n    }\r\n\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        var y = Math.max(0.0, this.bounces);\r\n        var bounciness = this.bounciness;\r\n        if (bounciness <= 1.0) {\r\n            bounciness = 1.001;\r\n        }\r\n        var num9 = Math.pow(bounciness, y);\r\n        var num5 = 1.0 - bounciness;\r\n        var num4 = ((1.0 - num9) / num5) + (num9 * 0.5);\r\n        var num15 = gradient * num4;\r\n        var num65 = Math.log((-num15 * (1.0 - bounciness)) + 1.0) / Math.log(bounciness);\r\n        var num3 = Math.floor(num65);\r\n        var num13 = num3 + 1.0;\r\n        var num8 = (1.0 - Math.pow(bounciness, num3)) / (num5 * num4);\r\n        var num12 = (1.0 - Math.pow(bounciness, num13)) / (num5 * num4);\r\n        var num7 = (num8 + num12) * 0.5;\r\n        var num6 = gradient - num7;\r\n        var num2 = num7 - num8;\r\n        return (((-Math.pow(1.0 / bounciness, y - num3) / (num2 * num2)) * (num6 - num2)) * (num6 + num2));\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with a power of 3 shape (see link below).\r\n * @see https://easings.net/#easeInCubic\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class CubicEase extends EasingFunction implements IEasingFunction {\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        return (gradient * gradient * gradient);\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with an elastic shape (see link below).\r\n * @see https://easings.net/#easeInElastic\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class ElasticEase extends EasingFunction implements IEasingFunction {\r\n    /**\r\n     * Instantiates an elastic easing function\r\n     * @see https://easings.net/#easeInElastic\r\n     * @param oscillations Defines the number of oscillations\r\n     * @param springiness Defines the amplitude of the oscillations\r\n     */\r\n    constructor(\r\n        /** Defines the number of oscillations*/\r\n        public oscillations: number = 3,\r\n        /** Defines the amplitude of the oscillations*/\r\n        public springiness: number = 3) {\r\n        super();\r\n    }\r\n\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        var num2;\r\n        var num3 = Math.max(0.0, this.oscillations);\r\n        var num = Math.max(0.0, this.springiness);\r\n\r\n        if (num == 0) {\r\n            num2 = gradient;\r\n        } else {\r\n            num2 = (Math.exp(num * gradient) - 1.0) / (Math.exp(num) - 1.0);\r\n        }\r\n        return (num2 * Math.sin(((6.2831853071795862 * num3) + 1.5707963267948966) * gradient));\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with an exponential shape (see link below).\r\n * @see https://easings.net/#easeInExpo\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class ExponentialEase extends EasingFunction implements IEasingFunction {\r\n    /**\r\n     * Instantiates an exponential easing function\r\n     * @see https://easings.net/#easeInExpo\r\n     * @param exponent Defines the exponent of the function\r\n     */\r\n    constructor(\r\n        /** Defines the exponent of the function */\r\n        public exponent: number = 2) {\r\n        super();\r\n    }\r\n\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        if (this.exponent <= 0) {\r\n            return gradient;\r\n        }\r\n\r\n        return ((Math.exp(this.exponent * gradient) - 1.0) / (Math.exp(this.exponent) - 1.0));\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with a power shape (see link below).\r\n * @see https://easings.net/#easeInQuad\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class PowerEase extends EasingFunction implements IEasingFunction {\r\n    /**\r\n     * Instantiates an power base easing function\r\n     * @see https://easings.net/#easeInQuad\r\n     * @param power Defines the power of the function\r\n     */\r\n    constructor(\r\n        /** Defines the power of the function */\r\n        public power: number = 2) {\r\n        super();\r\n    }\r\n\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        var y = Math.max(0.0, this.power);\r\n        return Math.pow(gradient, y);\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with a power of 2 shape (see link below).\r\n * @see https://easings.net/#easeInQuad\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class QuadraticEase extends EasingFunction implements IEasingFunction {\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        return (gradient * gradient);\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with a power of 4 shape (see link below).\r\n * @see https://easings.net/#easeInQuart\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class QuarticEase extends EasingFunction implements IEasingFunction {\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        return (gradient * gradient * gradient * gradient);\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with a power of 5 shape (see link below).\r\n * @see https://easings.net/#easeInQuint\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class QuinticEase extends EasingFunction implements IEasingFunction {\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        return (gradient * gradient * gradient * gradient * gradient);\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with a sin shape (see link below).\r\n * @see https://easings.net/#easeInSine\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class SineEase extends EasingFunction implements IEasingFunction {\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        return (1.0 - Math.sin(1.5707963267948966 * (1.0 - gradient)));\r\n    }\r\n}\r\n\r\n/**\r\n * Easing function with a bezier shape (see link below).\r\n * @see http://cubic-bezier.com/#.17,.67,.83,.67\r\n * @see https://doc.babylonjs.com/babylon101/animations#easing-functions\r\n */\r\nexport class BezierCurveEase extends EasingFunction implements IEasingFunction {\r\n    /**\r\n     * Instantiates a bezier function\r\n     * @see http://cubic-bezier.com/#.17,.67,.83,.67\r\n     * @param x1 Defines the x component of the start tangent in the bezier curve\r\n     * @param y1 Defines the y component of the start tangent in the bezier curve\r\n     * @param x2 Defines the x component of the end tangent in the bezier curve\r\n     * @param y2 Defines the y component of the end tangent in the bezier curve\r\n     */\r\n    constructor(\r\n        /** Defines the x component of the start tangent in the bezier curve */\r\n        public x1: number = 0,\r\n        /** Defines the y component of the start tangent in the bezier curve */\r\n        public y1: number = 0,\r\n        /** Defines the x component of the end tangent in the bezier curve */\r\n        public x2: number = 1,\r\n        /** Defines the y component of the end tangent in the bezier curve */\r\n        public y2: number = 1) {\r\n        super();\r\n    }\r\n\r\n    /** @hidden */\r\n    public easeInCore(gradient: number): number {\r\n        return BezierCurve.Interpolate(gradient, this.x1, this.y1, this.x2, this.y2);\r\n    }\r\n}\r\n"]}