{"version":3,"file":"shaderCodeCursor.js","sourceRoot":"","sources":["../../../../sourceES6/core/Engines/Processors/shaderCodeCursor.ts"],"names":[],"mappings":"AAAA,cAAc;AACd;IAAA;IAoCA,CAAC;IAhCG,sBAAI,yCAAW;aAAf;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC;;;OAAA;IAED,sBAAI,qCAAO;aAAX;YACI,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACnD,CAAC;;;OAAA;IAED,sBAAI,mCAAK;aAAT,UAAU,KAAe;YACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YAEjB,KAAiB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;gBAAnB,IAAI,IAAI,cAAA;gBACT,yCAAyC;gBACzC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;oBACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACvB,SAAS;iBACZ;gBAED,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE9B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;oBAC/C,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC3B,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;oBAEzB,IAAI,CAAC,OAAO,EAAE;wBACV,SAAS;qBACZ;oBAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACvE;aACJ;QACL,CAAC;;;OAAA;IACL,uBAAC;AAAD,CAAC,AApCD,IAoCC","sourcesContent":["/** @hidden */\r\nexport class ShaderCodeCursor {\r\n    private _lines: string[];\r\n    lineIndex: number;\r\n\r\n    get currentLine(): string {\r\n        return this._lines[this.lineIndex];\r\n    }\r\n\r\n    get canRead(): boolean {\r\n        return this.lineIndex < this._lines.length - 1;\r\n    }\r\n\r\n    set lines(value: string[]) {\r\n        this._lines = [];\r\n\r\n        for (var line of value) {\r\n            // Prevent removing line break in macros.\r\n            if (line[0] === \"#\") {\r\n                this._lines.push(line);\r\n                continue;\r\n            }\r\n\r\n            const split = line.split(\";\");\r\n\r\n            for (var index = 0; index < split.length; index++) {\r\n                let subLine = split[index];\r\n                subLine = subLine.trim();\r\n\r\n                if (!subLine) {\r\n                    continue;\r\n                }\r\n\r\n                this._lines.push(subLine + (index !== split.length - 1 ? \";\" : \"\"));\r\n            }\r\n        }\r\n    }\r\n}"]}