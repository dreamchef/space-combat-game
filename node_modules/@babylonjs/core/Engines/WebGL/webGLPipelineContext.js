/** @hidden */
var WebGLPipelineContext = /** @class */ (function () {
    function WebGLPipelineContext() {
        this.vertexCompilationError = null;
        this.fragmentCompilationError = null;
        this.programLinkError = null;
        this.programValidationError = null;
    }
    Object.defineProperty(WebGLPipelineContext.prototype, "isAsync", {
        get: function () {
            return this.isParallelCompiled;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGLPipelineContext.prototype, "isReady", {
        get: function () {
            if (this.program) {
                if (this.isParallelCompiled) {
                    return this.engine._isRenderingStateCompiled(this);
                }
                return true;
            }
            return false;
        },
        enumerable: false,
        configurable: true
    });
    WebGLPipelineContext.prototype._handlesSpectorRebuildCallback = function (onCompiled) {
        if (onCompiled && this.program) {
            onCompiled(this.program);
        }
    };
    WebGLPipelineContext.prototype._getVertexShaderCode = function () {
        return this.vertexShader ? this.engine._getShaderSource(this.vertexShader) : null;
    };
    WebGLPipelineContext.prototype._getFragmentShaderCode = function () {
        return this.fragmentShader ? this.engine._getShaderSource(this.fragmentShader) : null;
    };
    return WebGLPipelineContext;
}());
export { WebGLPipelineContext };
//# sourceMappingURL=webGLPipelineContext.js.map