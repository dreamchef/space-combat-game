{"version":3,"file":"webGLPipelineContext.js","sourceRoot":"","sources":["../../../../sourceES6/core/Engines/WebGL/webGLPipelineContext.ts"],"names":[],"mappings":"AAIA,cAAc;AACd;IAAA;QAUW,2BAAsB,GAAqB,IAAI,CAAC;QAChD,6BAAwB,GAAqB,IAAI,CAAC;QAClD,qBAAgB,GAAqB,IAAI,CAAC;QAC1C,2BAAsB,GAAqB,IAAI,CAAC;IA8B3D,CAAC;IA5BG,sBAAW,yCAAO;aAAlB;YACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;QACnC,CAAC;;;OAAA;IAED,sBAAW,yCAAO;aAAlB;YACI,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBACzB,OAAO,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;iBACtD;gBACD,OAAO,IAAI,CAAC;aACf;YAED,OAAO,KAAK,CAAC;QACjB,CAAC;;;OAAA;IAEM,6DAA8B,GAArC,UAAsC,UAA2C;QAC7E,IAAI,UAAU,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5B;IACL,CAAC;IAEM,mDAAoB,GAA3B;QACI,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACtF,CAAC;IAEM,qDAAsB,GAA7B;QACI,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1F,CAAC;IACL,2BAAC;AAAD,CAAC,AA3CD,IA2CC","sourcesContent":["import { IPipelineContext } from '../IPipelineContext';\r\nimport { Nullable } from '../../types';\r\nimport { ThinEngine } from '../thinEngine';\r\n\r\n/** @hidden */\r\nexport class WebGLPipelineContext implements IPipelineContext {\r\n    public engine: ThinEngine;\r\n    public program: Nullable<WebGLProgram>;\r\n    public context?: WebGLRenderingContext;\r\n    public vertexShader?: WebGLShader;\r\n    public fragmentShader?: WebGLShader;\r\n    public isParallelCompiled: boolean;\r\n    public onCompiled?: () => void;\r\n    public transformFeedback?: WebGLTransformFeedback | null;\r\n\r\n    public vertexCompilationError: Nullable<string> = null;\r\n    public fragmentCompilationError: Nullable<string> = null;\r\n    public programLinkError: Nullable<string> = null;\r\n    public programValidationError: Nullable<string> = null;\r\n\r\n    public get isAsync() {\r\n        return this.isParallelCompiled;\r\n    }\r\n\r\n    public get isReady(): boolean {\r\n        if (this.program) {\r\n            if (this.isParallelCompiled) {\r\n                return this.engine._isRenderingStateCompiled(this);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public _handlesSpectorRebuildCallback(onCompiled: (program: WebGLProgram) => void): void {\r\n        if (onCompiled && this.program) {\r\n            onCompiled(this.program);\r\n        }\r\n    }\r\n\r\n    public _getVertexShaderCode(): string | null {\r\n        return this.vertexShader ? this.engine._getShaderSource(this.vertexShader) : null;\r\n    }\r\n\r\n    public _getFragmentShaderCode(): string | null {\r\n        return this.fragmentShader ? this.engine._getShaderSource(this.fragmentShader) : null;\r\n    }\r\n}"]}