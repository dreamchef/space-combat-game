{"version":3,"file":"webGLShaderProcessors.js","sourceRoot":"","sources":["../../../../sourceES6/core/Engines/WebGL/webGLShaderProcessors.ts"],"names":[],"mappings":"AAIA,cAAc;AACd;IAAA;IAYA,CAAC;IAXU,4CAAa,GAApB,UAAqB,IAAY,EAAE,OAAiB,EAAE,UAAmB,EAAE,MAAkB;QAEzF,oBAAoB;QACpB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,oBAAoB,EAAE;YACxC,iHAAiH;YACjH,IAAI,KAAK,GAAG,oDAAoD,CAAC;YACjE,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SAClC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,2BAAC;AAAD,CAAC,AAZD,IAYC","sourcesContent":["import { IShaderProcessor } from '../Processors/iShaderProcessor';\r\n\r\nimport { ThinEngine } from '../thinEngine';\r\n\r\n/** @hidden */\r\nexport class WebGLShaderProcessor implements IShaderProcessor {\r\n    public postProcessor(code: string, defines: string[], isFragment: boolean, engine: ThinEngine) {\r\n\r\n        // Remove extensions\r\n        if (!engine.getCaps().drawBuffersExtension) {\r\n            // even if enclosed in #if/#endif, IE11 does parse the #extension declaration, so we need to remove it altogether\r\n            var regex = /#extension.+GL_EXT_draw_buffers.+(enable|require)/g;\r\n            code = code.replace(regex, \"\");\r\n        }\r\n\r\n        return code;\r\n    }\r\n}"]}