{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../sourceES6/core/Engines/constants.ts"],"names":[],"mappings":"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","sourcesContent":["/** Defines the cross module used constants to avoid circular dependncies */\r\nexport class Constants {\r\n    /** Defines that alpha blending is disabled */\r\n    public static readonly ALPHA_DISABLE = 0;\r\n    /** Defines that alpha blending is SRC ALPHA * SRC + DEST */\r\n    public static readonly ALPHA_ADD = 1;\r\n    /** Defines that alpha blending is SRC ALPHA * SRC + (1 - SRC ALPHA) * DEST */\r\n    public static readonly ALPHA_COMBINE = 2;\r\n    /** Defines that alpha blending is DEST - SRC * DEST */\r\n    public static readonly ALPHA_SUBTRACT = 3;\r\n    /** Defines that alpha blending is SRC * DEST */\r\n    public static readonly ALPHA_MULTIPLY = 4;\r\n    /** Defines that alpha blending is SRC ALPHA * SRC + (1 - SRC) * DEST */\r\n    public static readonly ALPHA_MAXIMIZED = 5;\r\n    /** Defines that alpha blending is SRC + DEST */\r\n    public static readonly ALPHA_ONEONE = 6;\r\n    /** Defines that alpha blending is SRC + (1 - SRC ALPHA) * DEST */\r\n    public static readonly ALPHA_PREMULTIPLIED = 7;\r\n    /**\r\n     * Defines that alpha blending is SRC + (1 - SRC ALPHA) * DEST\r\n     * Alpha will be set to (1 - SRC ALPHA) * DEST ALPHA\r\n     */\r\n    public static readonly ALPHA_PREMULTIPLIED_PORTERDUFF = 8;\r\n    /** Defines that alpha blending is CST * SRC + (1 - CST) * DEST */\r\n    public static readonly ALPHA_INTERPOLATE = 9;\r\n    /**\r\n     * Defines that alpha blending is SRC + (1 - SRC) * DEST\r\n     * Alpha will be set to SRC ALPHA + (1 - SRC ALPHA) * DEST ALPHA\r\n     */\r\n    public static readonly ALPHA_SCREENMODE = 10;\r\n    /**\r\n     * Defines that alpha blending is SRC + DST\r\n     * Alpha will be set to SRC ALPHA + DST ALPHA\r\n     */\r\n    public static readonly ALPHA_ONEONE_ONEONE = 11;\r\n    /**\r\n     * Defines that alpha blending is SRC * DST ALPHA + DST\r\n     * Alpha will be set to 0\r\n     */\r\n    public static readonly ALPHA_ALPHATOCOLOR = 12;\r\n    /**\r\n     * Defines that alpha blending is SRC * (1 - DST) + DST * (1 - SRC)\r\n     */\r\n    public static readonly ALPHA_REVERSEONEMINUS = 13;\r\n    /**\r\n     * Defines that alpha blending is SRC + DST * (1 - SRC ALPHA)\r\n     * Alpha will be set to SRC ALPHA + DST ALPHA * (1 - SRC ALPHA)\r\n     */\r\n    public static readonly ALPHA_SRC_DSTONEMINUSSRCALPHA = 14;\r\n    /**\r\n     * Defines that alpha blending is SRC + DST\r\n     * Alpha will be set to SRC ALPHA\r\n     */\r\n    public static readonly ALPHA_ONEONE_ONEZERO = 15;\r\n    /**\r\n     * Defines that alpha blending is SRC * (1 - DST) + DST * (1 - SRC)\r\n     * Alpha will be set to DST ALPHA\r\n     */\r\n    public static readonly ALPHA_EXCLUSION = 16;\r\n\r\n    /** Defines that alpha blending equation a SUM */\r\n    public static readonly ALPHA_EQUATION_ADD = 0;\r\n    /** Defines that alpha blending equation a SUBSTRACTION */\r\n    public static readonly ALPHA_EQUATION_SUBSTRACT = 1;\r\n    /** Defines that alpha blending equation a REVERSE SUBSTRACTION */\r\n    public static readonly ALPHA_EQUATION_REVERSE_SUBTRACT = 2;\r\n    /** Defines that alpha blending equation a MAX operation */\r\n    public static readonly ALPHA_EQUATION_MAX = 3;\r\n    /** Defines that alpha blending equation a MIN operation */\r\n    public static readonly ALPHA_EQUATION_MIN = 4;\r\n    /**\r\n     * Defines that alpha blending equation a DARKEN operation:\r\n     * It takes the min of the src and sums the alpha channels.\r\n     */\r\n    public static readonly ALPHA_EQUATION_DARKEN = 5;\r\n\r\n    /** Defines that the ressource is not delayed*/\r\n    public static readonly DELAYLOADSTATE_NONE = 0;\r\n    /** Defines that the ressource was successfully delay loaded */\r\n    public static readonly DELAYLOADSTATE_LOADED = 1;\r\n    /** Defines that the ressource is currently delay loading */\r\n    public static readonly DELAYLOADSTATE_LOADING = 2;\r\n    /** Defines that the ressource is delayed and has not started loading */\r\n    public static readonly DELAYLOADSTATE_NOTLOADED = 4;\r\n\r\n    // Depht or Stencil test Constants.\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn */\r\n    public static readonly NEVER = 0x0200;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn */\r\n    public static readonly ALWAYS = 0x0207;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value */\r\n    public static readonly LESS = 0x0201;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value */\r\n    public static readonly EQUAL = 0x0202;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value */\r\n    public static readonly LEQUAL = 0x0203;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value */\r\n    public static readonly GREATER = 0x0204;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value */\r\n    public static readonly GEQUAL = 0x0206;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value */\r\n    public static readonly NOTEQUAL = 0x0205;\r\n\r\n    // Stencil Actions Constants.\r\n    /** Passed to stencilOperation to specify that stencil value must be kept */\r\n    public static readonly KEEP = 0x1E00;\r\n    /** Passed to stencilOperation to specify that stencil value must be replaced */\r\n    public static readonly REPLACE = 0x1E01;\r\n    /** Passed to stencilOperation to specify that stencil value must be incremented */\r\n    public static readonly INCR = 0x1E02;\r\n    /** Passed to stencilOperation to specify that stencil value must be decremented */\r\n    public static readonly DECR = 0x1E03;\r\n    /** Passed to stencilOperation to specify that stencil value must be inverted */\r\n    public static readonly INVERT = 0x150A;\r\n    /** Passed to stencilOperation to specify that stencil value must be incremented with wrapping */\r\n    public static readonly INCR_WRAP = 0x8507;\r\n    /** Passed to stencilOperation to specify that stencil value must be decremented with wrapping */\r\n    public static readonly DECR_WRAP = 0x8508;\r\n\r\n    /** Texture is not repeating outside of 0..1 UVs */\r\n    public static readonly TEXTURE_CLAMP_ADDRESSMODE = 0;\r\n    /** Texture is repeating outside of 0..1 UVs */\r\n    public static readonly TEXTURE_WRAP_ADDRESSMODE = 1;\r\n    /** Texture is repeating and mirrored */\r\n    public static readonly TEXTURE_MIRROR_ADDRESSMODE = 2;\r\n\r\n    /** ALPHA */\r\n    public static readonly TEXTUREFORMAT_ALPHA = 0;\r\n    /** LUMINANCE */\r\n    public static readonly TEXTUREFORMAT_LUMINANCE = 1;\r\n    /** LUMINANCE_ALPHA */\r\n    public static readonly TEXTUREFORMAT_LUMINANCE_ALPHA = 2;\r\n    /** RGB */\r\n    public static readonly TEXTUREFORMAT_RGB = 4;\r\n    /** RGBA */\r\n    public static readonly TEXTUREFORMAT_RGBA = 5;\r\n    /** RED */\r\n    public static readonly TEXTUREFORMAT_RED = 6;\r\n    /** RED (2nd reference) */\r\n    public static readonly TEXTUREFORMAT_R = 6;\r\n    /** RG */\r\n    public static readonly TEXTUREFORMAT_RG = 7;\r\n    /** RED_INTEGER */\r\n    public static readonly TEXTUREFORMAT_RED_INTEGER = 8;\r\n    /** RED_INTEGER (2nd reference) */\r\n    public static readonly TEXTUREFORMAT_R_INTEGER = 8;\r\n    /** RG_INTEGER */\r\n    public static readonly TEXTUREFORMAT_RG_INTEGER = 9;\r\n    /** RGB_INTEGER */\r\n    public static readonly TEXTUREFORMAT_RGB_INTEGER = 10;\r\n    /** RGBA_INTEGER */\r\n    public static readonly TEXTUREFORMAT_RGBA_INTEGER = 11;\r\n\r\n    /** UNSIGNED_BYTE */\r\n    public static readonly TEXTURETYPE_UNSIGNED_BYTE = 0;\r\n    /** UNSIGNED_BYTE (2nd reference) */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INT = 0;\r\n    /** FLOAT */\r\n    public static readonly TEXTURETYPE_FLOAT = 1;\r\n    /** HALF_FLOAT */\r\n    public static readonly TEXTURETYPE_HALF_FLOAT = 2;\r\n    /** BYTE */\r\n    public static readonly TEXTURETYPE_BYTE = 3;\r\n    /** SHORT */\r\n    public static readonly TEXTURETYPE_SHORT = 4;\r\n    /** UNSIGNED_SHORT */\r\n    public static readonly TEXTURETYPE_UNSIGNED_SHORT = 5;\r\n    /** INT */\r\n    public static readonly TEXTURETYPE_INT = 6;\r\n    /** UNSIGNED_INT */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INTEGER = 7;\r\n    /** UNSIGNED_SHORT_4_4_4_4 */\r\n    public static readonly TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4 = 8;\r\n    /** UNSIGNED_SHORT_5_5_5_1 */\r\n    public static readonly TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1 = 9;\r\n    /** UNSIGNED_SHORT_5_6_5 */\r\n    public static readonly TEXTURETYPE_UNSIGNED_SHORT_5_6_5 = 10;\r\n    /** UNSIGNED_INT_2_10_10_10_REV */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV = 11;\r\n    /** UNSIGNED_INT_24_8 */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INT_24_8 = 12;\r\n    /** UNSIGNED_INT_10F_11F_11F_REV */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV = 13;\r\n    /** UNSIGNED_INT_5_9_9_9_REV */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV = 14;\r\n    /** FLOAT_32_UNSIGNED_INT_24_8_REV */\r\n    public static readonly TEXTURETYPE_FLOAT_32_UNSIGNED_INT_24_8_REV = 15;\r\n\r\n    /** nearest is mag = nearest and min = nearest and no mip */\r\n    public static readonly TEXTURE_NEAREST_SAMPLINGMODE = 1;\r\n    /** mag = nearest and min = nearest and mip = none */\r\n    public static readonly TEXTURE_NEAREST_NEAREST = 1;\r\n\r\n    /** Bilinear is mag = linear and min = linear and no mip */\r\n    public static readonly TEXTURE_BILINEAR_SAMPLINGMODE = 2;\r\n    /** mag = linear and min = linear and mip = none */\r\n    public static readonly TEXTURE_LINEAR_LINEAR = 2;\r\n\r\n    /** Trilinear is mag = linear and min = linear and mip = linear */\r\n    public static readonly TEXTURE_TRILINEAR_SAMPLINGMODE = 3;\r\n    /** Trilinear is mag = linear and min = linear and mip = linear */\r\n    public static readonly TEXTURE_LINEAR_LINEAR_MIPLINEAR = 3;\r\n\r\n    /** mag = nearest and min = nearest and mip = nearest */\r\n    public static readonly TEXTURE_NEAREST_NEAREST_MIPNEAREST = 4;\r\n    /** mag = nearest and min = linear and mip = nearest */\r\n    public static readonly TEXTURE_NEAREST_LINEAR_MIPNEAREST = 5;\r\n    /** mag = nearest and min = linear and mip = linear */\r\n    public static readonly TEXTURE_NEAREST_LINEAR_MIPLINEAR = 6;\r\n    /** mag = nearest and min = linear and mip = none */\r\n    public static readonly TEXTURE_NEAREST_LINEAR = 7;\r\n    /** nearest is mag = nearest and min = nearest and mip = linear */\r\n    public static readonly TEXTURE_NEAREST_NEAREST_MIPLINEAR = 8;\r\n    /** mag = linear and min = nearest and mip = nearest */\r\n    public static readonly TEXTURE_LINEAR_NEAREST_MIPNEAREST = 9;\r\n    /** mag = linear and min = nearest and mip = linear */\r\n    public static readonly TEXTURE_LINEAR_NEAREST_MIPLINEAR = 10;\r\n    /** Bilinear is mag = linear and min = linear and mip = nearest */\r\n    public static readonly TEXTURE_LINEAR_LINEAR_MIPNEAREST = 11;\r\n    /** mag = linear and min = nearest and mip = none */\r\n    public static readonly TEXTURE_LINEAR_NEAREST = 12;\r\n\r\n    /** Explicit coordinates mode */\r\n    public static readonly TEXTURE_EXPLICIT_MODE = 0;\r\n    /** Spherical coordinates mode */\r\n    public static readonly TEXTURE_SPHERICAL_MODE = 1;\r\n    /** Planar coordinates mode */\r\n    public static readonly TEXTURE_PLANAR_MODE = 2;\r\n    /** Cubic coordinates mode */\r\n    public static readonly TEXTURE_CUBIC_MODE = 3;\r\n    /** Projection coordinates mode */\r\n    public static readonly TEXTURE_PROJECTION_MODE = 4;\r\n    /** Skybox coordinates mode */\r\n    public static readonly TEXTURE_SKYBOX_MODE = 5;\r\n    /** Inverse Cubic coordinates mode */\r\n    public static readonly TEXTURE_INVCUBIC_MODE = 6;\r\n    /** Equirectangular coordinates mode */\r\n    public static readonly TEXTURE_EQUIRECTANGULAR_MODE = 7;\r\n    /** Equirectangular Fixed coordinates mode */\r\n    public static readonly TEXTURE_FIXED_EQUIRECTANGULAR_MODE = 8;\r\n    /** Equirectangular Fixed Mirrored coordinates mode */\r\n    public static readonly TEXTURE_FIXED_EQUIRECTANGULAR_MIRRORED_MODE = 9;\r\n\r\n    /** Offline (baking) quality for texture filtering */\r\n    public static readonly TEXTURE_FILTERING_QUALITY_OFFLINE = 4096;\r\n\r\n    /** High quality for texture filtering */\r\n    public static readonly TEXTURE_FILTERING_QUALITY_HIGH = 64;\r\n\r\n    /** Medium quality for texture filtering */\r\n    public static readonly TEXTURE_FILTERING_QUALITY_MEDIUM = 16;\r\n\r\n    /** Low quality for texture filtering */\r\n    public static readonly TEXTURE_FILTERING_QUALITY_LOW = 8;\r\n\r\n    // Texture rescaling mode\r\n    /** Defines that texture rescaling will use a floor to find the closer power of 2 size */\r\n    public static readonly SCALEMODE_FLOOR = 1;\r\n    /** Defines that texture rescaling will look for the nearest power of 2 size */\r\n    public static readonly SCALEMODE_NEAREST = 2;\r\n    /** Defines that texture rescaling will use a ceil to find the closer power of 2 size */\r\n    public static readonly SCALEMODE_CEILING = 3;\r\n\r\n    /**\r\n     * The dirty texture flag value\r\n     */\r\n    public static readonly MATERIAL_TextureDirtyFlag = 1;\r\n    /**\r\n     * The dirty light flag value\r\n     */\r\n    public static readonly MATERIAL_LightDirtyFlag = 2;\r\n    /**\r\n     * The dirty fresnel flag value\r\n     */\r\n    public static readonly MATERIAL_FresnelDirtyFlag = 4;\r\n    /**\r\n     * The dirty attribute flag value\r\n     */\r\n    public static readonly MATERIAL_AttributesDirtyFlag = 8;\r\n    /**\r\n     * The dirty misc flag value\r\n     */\r\n    public static readonly MATERIAL_MiscDirtyFlag = 16;\r\n    /**\r\n     * The dirty prepass flag value\r\n     */\r\n    public static readonly MATERIAL_PrePassDirtyFlag = 32;\r\n    /**\r\n     * The all dirty flag value\r\n     */\r\n    public static readonly MATERIAL_AllDirtyFlag = 63;\r\n\r\n    /**\r\n     * Returns the triangle fill mode\r\n     */\r\n    public static readonly MATERIAL_TriangleFillMode = 0;\r\n    /**\r\n     * Returns the wireframe mode\r\n     */\r\n    public static readonly MATERIAL_WireFrameFillMode = 1;\r\n    /**\r\n     * Returns the point fill mode\r\n     */\r\n    public static readonly MATERIAL_PointFillMode = 2;\r\n    /**\r\n     * Returns the point list draw mode\r\n     */\r\n    public static readonly MATERIAL_PointListDrawMode = 3;\r\n    /**\r\n     * Returns the line list draw mode\r\n     */\r\n    public static readonly MATERIAL_LineListDrawMode = 4;\r\n    /**\r\n     * Returns the line loop draw mode\r\n     */\r\n    public static readonly MATERIAL_LineLoopDrawMode = 5;\r\n    /**\r\n     * Returns the line strip draw mode\r\n     */\r\n    public static readonly MATERIAL_LineStripDrawMode = 6;\r\n\r\n    /**\r\n     * Returns the triangle strip draw mode\r\n     */\r\n    public static readonly MATERIAL_TriangleStripDrawMode = 7;\r\n    /**\r\n     * Returns the triangle fan draw mode\r\n     */\r\n    public static readonly MATERIAL_TriangleFanDrawMode = 8;\r\n\r\n    /**\r\n     * Stores the clock-wise side orientation\r\n     */\r\n    public static readonly MATERIAL_ClockWiseSideOrientation = 0;\r\n    /**\r\n     * Stores the counter clock-wise side orientation\r\n     */\r\n    public static readonly MATERIAL_CounterClockWiseSideOrientation = 1;\r\n\r\n    /**\r\n     * Nothing\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_NothingTrigger = 0;\r\n    /**\r\n     * On pick\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnPickTrigger = 1;\r\n    /**\r\n     * On left pick\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnLeftPickTrigger = 2;\r\n    /**\r\n     * On right pick\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnRightPickTrigger = 3;\r\n    /**\r\n     * On center pick\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnCenterPickTrigger = 4;\r\n    /**\r\n     * On pick down\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnPickDownTrigger = 5;\r\n    /**\r\n     * On double pick\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnDoublePickTrigger = 6;\r\n    /**\r\n     * On pick up\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnPickUpTrigger = 7;\r\n    /**\r\n     * On pick out.\r\n     * This trigger will only be raised if you also declared a OnPickDown\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnPickOutTrigger = 16;\r\n    /**\r\n     * On long press\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnLongPressTrigger = 8;\r\n    /**\r\n     * On pointer over\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnPointerOverTrigger = 9;\r\n    /**\r\n     * On pointer out\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnPointerOutTrigger = 10;\r\n    /**\r\n     * On every frame\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnEveryFrameTrigger = 11;\r\n    /**\r\n     * On intersection enter\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnIntersectionEnterTrigger = 12;\r\n    /**\r\n     * On intersection exit\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnIntersectionExitTrigger = 13;\r\n    /**\r\n     * On key down\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnKeyDownTrigger = 14;\r\n    /**\r\n     * On key up\r\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\r\n     */\r\n    public static readonly ACTION_OnKeyUpTrigger = 15;\r\n\r\n    /**\r\n     * Billboard mode will only apply to Y axis\r\n     */\r\n    public static readonly PARTICLES_BILLBOARDMODE_Y = 2;\r\n    /**\r\n     * Billboard mode will apply to all axes\r\n     */\r\n    public static readonly PARTICLES_BILLBOARDMODE_ALL = 7;\r\n    /**\r\n     * Special billboard mode where the particle will be biilboard to the camera but rotated to align with direction\r\n     */\r\n    public static readonly PARTICLES_BILLBOARDMODE_STRETCHED = 8;\r\n\r\n    /** Default culling strategy : this is an exclusion test and it's the more accurate.\r\n     *  Test order :\r\n     *  Is the bounding sphere outside the frustum ?\r\n     *  If not, are the bounding box vertices outside the frustum ?\r\n     *  It not, then the cullable object is in the frustum.\r\n     */\r\n    public static readonly MESHES_CULLINGSTRATEGY_STANDARD = 0;\r\n    /** Culling strategy : Bounding Sphere Only.\r\n     *  This is an exclusion test. It's faster than the standard strategy because the bounding box is not tested.\r\n     *  It's also less accurate than the standard because some not visible objects can still be selected.\r\n     *  Test : is the bounding sphere outside the frustum ?\r\n     *  If not, then the cullable object is in the frustum.\r\n     */\r\n    public static readonly MESHES_CULLINGSTRATEGY_BOUNDINGSPHERE_ONLY = 1;\r\n    /** Culling strategy : Optimistic Inclusion.\r\n     *  This in an inclusion test first, then the standard exclusion test.\r\n     *  This can be faster when a cullable object is expected to be almost always in the camera frustum.\r\n     *  This could also be a little slower than the standard test when the tested object center is not the frustum but one of its bounding box vertex is still inside.\r\n     *  Anyway, it's as accurate as the standard strategy.\r\n     *  Test :\r\n     *  Is the cullable object bounding sphere center in the frustum ?\r\n     *  If not, apply the default culling strategy.\r\n     */\r\n    public static readonly MESHES_CULLINGSTRATEGY_OPTIMISTIC_INCLUSION = 2;\r\n    /** Culling strategy : Optimistic Inclusion then Bounding Sphere Only.\r\n     *  This in an inclusion test first, then the bounding sphere only exclusion test.\r\n     *  This can be the fastest test when a cullable object is expected to be almost always in the camera frustum.\r\n     *  This could also be a little slower than the BoundingSphereOnly strategy when the tested object center is not in the frustum but its bounding sphere still intersects it.\r\n     *  It's less accurate than the standard strategy and as accurate as the BoundingSphereOnly strategy.\r\n     *  Test :\r\n     *  Is the cullable object bounding sphere center in the frustum ?\r\n     *  If not, apply the Bounding Sphere Only strategy. No Bounding Box is tested here.\r\n     */\r\n    public static readonly MESHES_CULLINGSTRATEGY_OPTIMISTIC_INCLUSION_THEN_BSPHERE_ONLY = 3;\r\n\r\n    /**\r\n     * No logging while loading\r\n     */\r\n    public static readonly SCENELOADER_NO_LOGGING = 0;\r\n    /**\r\n     * Minimal logging while loading\r\n     */\r\n    public static readonly SCENELOADER_MINIMAL_LOGGING = 1;\r\n    /**\r\n     * Summary logging while loading\r\n     */\r\n    public static readonly SCENELOADER_SUMMARY_LOGGING = 2;\r\n    /**\r\n     * Detailled logging while loading\r\n     */\r\n    public static readonly SCENELOADER_DETAILED_LOGGING = 3;\r\n\r\n    /**\r\n     * Constant used to retrieve the irradiance texture index in the textures array in the prepass\r\n     * using getIndex(0)\r\n     */\r\n    public static readonly PREPASS_IRRADIANCE_TEXTURE_TYPE = 0;\r\n    /**\r\n     * Constant used to retrieve the position texture index in the textures array in the prepass\r\n     * using getIndex(undefined)\r\n     */\r\n    public static readonly PREPASS_POSITION_TEXTURE_TYPE = 1;\r\n    /**\r\n     * Constant used to retrieve the velocity texture index in the textures array in the prepass\r\n     * using getIndex(undefined)\r\n     */\r\n    public static readonly PREPASS_VELOCITY_TEXTURE_TYPE = 2;\r\n    /**\r\n     * Constant used to retrieve the reflectivity texture index in the textures array in the prepass\r\n     * using the getIndex(3)\r\n     */\r\n    public static readonly PREPASS_REFLECTIVITY_TEXTURE_TYPE = 3;\r\n    /**\r\n     * Constant used to retrieve the lit color texture index in the textures array in the prepass\r\n     * using the getIndex(4)\r\n     */\r\n    public static readonly PREPASS_COLOR_TEXTURE_TYPE = 4;\r\n    /**\r\n     * Constant used to retrieve depth + normal index in the textures array in the prepass\r\n     * using the getIndex(5)\r\n     */\r\n    public static readonly PREPASS_DEPTHNORMAL_TEXTURE_TYPE = 5;\r\n    /**\r\n     * Constant used to retrieve albedo index in the textures array in the prepass\r\n     * using the getIndex(6)\r\n     */\r\n    public static readonly PREPASS_ALBEDO_TEXTURE_TYPE = 6;\r\n}\r\n"]}