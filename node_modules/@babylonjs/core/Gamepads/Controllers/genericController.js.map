{"version":3,"file":"genericController.js","sourceRoot":"","sources":["../../../../sourceES6/core/Gamepads/Controllers/genericController.ts"],"names":[],"mappings":";AAEA,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAyB,2BAA2B,EAAE,MAAM,yBAAyB,CAAC;AAG7F;;GAEG;AACH;IAAuC,qCAAe;IAUlD;;;OAGG;IACH,2BAAY,SAAc;eACtB,kBAAM,SAAS,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACI,8CAAkB,GAAzB,UAA0B,KAAY,EAAE,UAAyC;QAAjF,iBAQC;QAPG,WAAW,CAAC,UAAU,CAAC,EAAE,EAAE,iBAAiB,CAAC,cAAc,EAAE,iBAAiB,CAAC,cAAc,EAAE,KAAK,EAAE,UAAC,SAAS;YAC5G,KAAI,CAAC,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAClC,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YACtC,IAAI,UAAU,EAAE;gBACZ,UAAU,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;aAClC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACO,+CAAmB,GAA7B,UAA8B,SAAiB,EAAE,KAA4B,EAAE,OAA6B;QACxG,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAzCD;;OAEG;IACoB,gCAAc,GAAW,4CAA4C,CAAC;IAC7F;;OAEG;IACoB,gCAAc,GAAW,iBAAiB,CAAC;IAmCtE,wBAAC;CAAA,AA3CD,CAAuC,eAAe,GA2CrD;SA3CY,iBAAiB;AA6C9B,2BAA2B,CAAC,yBAAyB,GAAG,UAAC,WAAgB,IAAK,OAAA,IAAI,iBAAiB,CAAC,WAAW,CAAC,EAAlC,CAAkC,CAAC","sourcesContent":["import { Scene } from \"../../scene\";\r\nimport { AbstractMesh } from \"../../Meshes/abstractMesh\";\r\nimport { SceneLoader } from \"../../Loading/sceneLoader\";\r\n\r\nimport { WebVRController } from \"./webVRController\";\r\nimport { ExtendedGamepadButton, PoseEnabledControllerHelper } from \"./poseEnabledController\";\r\nimport { GamepadButtonChanges } from \"../../Gamepads/gamepad\";\r\n\r\n/**\r\n * Generic Controller\r\n */\r\nexport class GenericController extends WebVRController {\r\n    /**\r\n     * Base Url for the controller model.\r\n     */\r\n    public static readonly MODEL_BASE_URL: string = 'https://controllers.babylonjs.com/generic/';\r\n    /**\r\n     * File name for the controller model.\r\n     */\r\n    public static readonly MODEL_FILENAME: string = 'generic.babylon';\r\n\r\n    /**\r\n     * Creates a new GenericController from a gamepad\r\n     * @param vrGamepad the gamepad that the controller should be created from\r\n     */\r\n    constructor(vrGamepad: any) {\r\n        super(vrGamepad);\r\n    }\r\n\r\n    /**\r\n     * Implements abstract method on WebVRController class, loading controller meshes and calling this.attachToMesh if successful.\r\n     * @param scene scene in which to add meshes\r\n     * @param meshLoaded optional callback function that will be called if the mesh loads successfully.\r\n     */\r\n    public initControllerMesh(scene: Scene, meshLoaded?: (mesh: AbstractMesh) => void) {\r\n        SceneLoader.ImportMesh(\"\", GenericController.MODEL_BASE_URL, GenericController.MODEL_FILENAME, scene, (newMeshes) => {\r\n            this._defaultModel = newMeshes[1];\r\n            this.attachToMesh(this._defaultModel);\r\n            if (meshLoaded) {\r\n                meshLoaded(this._defaultModel);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Called once for each button that changed state since the last frame\r\n     * @param buttonIdx Which button index changed\r\n     * @param state New state of the button\r\n     * @param changes Which properties on the state changed since last frame\r\n     */\r\n    protected _handleButtonChange(buttonIdx: number, state: ExtendedGamepadButton, changes: GamepadButtonChanges) {\r\n        console.log(\"Button id: \" + buttonIdx + \"state: \");\r\n        console.dir(state);\r\n    }\r\n}\r\n\r\nPoseEnabledControllerHelper._DefaultControllerFactory = (gamepadInfo: any) => new GenericController(gamepadInfo);\r\n"]}