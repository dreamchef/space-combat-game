import { __extends } from "tslib";
import { NodeMaterialBlock } from '../nodeMaterialBlock';
import { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';
import { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';
import { _TypeStore } from '../../../Misc/typeStore';
/**
 * Block used to create a Color3/4 out of individual inputs (one for each component)
 */
var ColorMergerBlock = /** @class */ (function (_super) {
    __extends(ColorMergerBlock, _super);
    /**
     * Create a new ColorMergerBlock
     * @param name defines the block name
     */
    function ColorMergerBlock(name) {
        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;
        _this.registerInput("rgb ", NodeMaterialBlockConnectionPointTypes.Color3, true);
        _this.registerInput("r", NodeMaterialBlockConnectionPointTypes.Float, true);
        _this.registerInput("g", NodeMaterialBlockConnectionPointTypes.Float, true);
        _this.registerInput("b", NodeMaterialBlockConnectionPointTypes.Float, true);
        _this.registerInput("a", NodeMaterialBlockConnectionPointTypes.Float, true);
        _this.registerOutput("rgba", NodeMaterialBlockConnectionPointTypes.Color4);
        _this.registerOutput("rgb", NodeMaterialBlockConnectionPointTypes.Color3);
        return _this;
    }
    /**
     * Gets the current class name
     * @returns the class name
     */
    ColorMergerBlock.prototype.getClassName = function () {
        return "ColorMergerBlock";
    };
    Object.defineProperty(ColorMergerBlock.prototype, "rgbIn", {
        /**
         * Gets the rgb component (input)
         */
        get: function () {
            return this._inputs[0];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColorMergerBlock.prototype, "r", {
        /**
         * Gets the r component (input)
         */
        get: function () {
            return this._inputs[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColorMergerBlock.prototype, "g", {
        /**
         * Gets the g component (input)
         */
        get: function () {
            return this._inputs[2];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColorMergerBlock.prototype, "b", {
        /**
         * Gets the b component (input)
         */
        get: function () {
            return this._inputs[3];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColorMergerBlock.prototype, "a", {
        /**
         * Gets the a component (input)
         */
        get: function () {
            return this._inputs[4];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColorMergerBlock.prototype, "rgba", {
        /**
         * Gets the rgba component (output)
         */
        get: function () {
            return this._outputs[0];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColorMergerBlock.prototype, "rgbOut", {
        /**
         * Gets the rgb component (output)
         */
        get: function () {
            return this._outputs[1];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColorMergerBlock.prototype, "rgb", {
        /**
         * Gets the rgb component (output)
         * @deprecated Please use rgbOut instead.
         */
        get: function () {
            return this.rgbOut;
        },
        enumerable: false,
        configurable: true
    });
    ColorMergerBlock.prototype._buildBlock = function (state) {
        _super.prototype._buildBlock.call(this, state);
        var rInput = this.r;
        var gInput = this.g;
        var bInput = this.b;
        var aInput = this.a;
        var rgbInput = this.rgbIn;
        var color4Output = this._outputs[0];
        var color3Output = this._outputs[1];
        if (rgbInput.isConnected) {
            if (color4Output.hasEndpoints) {
                state.compilationString += this._declareOutput(color4Output, state) + (" = vec4(" + rgbInput.associatedVariableName + ", " + (aInput.isConnected ? this._writeVariable(aInput) : "0.0") + ");\r\n");
            }
            else if (color3Output.hasEndpoints) {
                state.compilationString += this._declareOutput(color3Output, state) + (" = " + rgbInput.associatedVariableName + ";\r\n");
            }
        }
        else {
            if (color4Output.hasEndpoints) {
                state.compilationString += this._declareOutput(color4Output, state) + (" = vec4(" + (rInput.isConnected ? this._writeVariable(rInput) : "0.0") + ", " + (gInput.isConnected ? this._writeVariable(gInput) : "0.0") + ", " + (bInput.isConnected ? this._writeVariable(bInput) : "0.0") + ", " + (aInput.isConnected ? this._writeVariable(aInput) : "0.0") + ");\r\n");
            }
            else if (color3Output.hasEndpoints) {
                state.compilationString += this._declareOutput(color3Output, state) + (" = vec3(" + (rInput.isConnected ? this._writeVariable(rInput) : "0.0") + ", " + (gInput.isConnected ? this._writeVariable(gInput) : "0.0") + ", " + (bInput.isConnected ? this._writeVariable(bInput) : "0.0") + ");\r\n");
            }
        }
        return this;
    };
    return ColorMergerBlock;
}(NodeMaterialBlock));
export { ColorMergerBlock };
_TypeStore.RegisteredTypes["BABYLON.ColorMergerBlock"] = ColorMergerBlock;
//# sourceMappingURL=colorMergerBlock.js.map