{"version":3,"file":"nodeMaterialDecorator.js","sourceRoot":"","sources":["../../../../sourceES6/core/Materials/Node/nodeMaterialDecorator.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,CAAN,IAAY,sBASX;AATD,WAAY,sBAAsB;IAC9B,4BAA4B;IAC5B,yEAAO,CAAA;IACP,0BAA0B;IAC1B,qEAAK,CAAA;IACL,4BAA4B;IAC5B,yEAAO,CAAA;IACP,mCAAmC;IACnC,mEAAI,CAAA;AACR,CAAC,EATW,sBAAsB,KAAtB,sBAAsB,QASjC;AA+CD;;GAEG;AACH,MAAM,UAAU,sBAAsB,CAAC,WAAmB,EAAE,YAAqE,EAAE,SAAgC,EAAE,OAAiC;IAA1I,6BAAA,EAAA,eAAuC,sBAAsB,CAAC,OAAO;IAAE,0BAAA,EAAA,wBAAgC;IAC/J,OAAO,UAAC,MAAW,EAAE,WAAmB;QACpC,IAAI,SAAS,GAAqC,MAAM,CAAC,UAAU,CAAC;QACpE,IAAI,CAAC,SAAS,EAAE;YACZ,SAAS,GAAG,EAAE,CAAC;YACf,MAAM,CAAC,UAAU,GAAG,SAAS,CAAC;SACjC;QACD,SAAS,CAAC,IAAI,CAAC;YACX,cAAc,EAAE,WAAW;YAC3B,aAAa,EAAE,WAAW;YAC1B,MAAM,EAAE,YAAY;YACpB,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE;SAC3B,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC","sourcesContent":["/**\r\n * Enum defining the type of properties that can be edited in the property pages in the NME\r\n */\r\nexport enum PropertyTypeForEdition {\r\n    /** property is a boolean */\r\n    Boolean,\r\n    /** property is a float */\r\n    Float,\r\n    /** property is a Vector2 */\r\n    Vector2,\r\n    /** property is a list of values */\r\n    List,\r\n}\r\n\r\n/**\r\n * Interface that defines an option in a variable of type list\r\n */\r\nexport interface IEditablePropertyListOption {\r\n    /** label of the option */\r\n    \"label\": string;\r\n    /** value of the option */\r\n    \"value\": number;\r\n}\r\n\r\n/**\r\n * Interface that defines the options available for an editable property\r\n */\r\nexport interface IEditablePropertyOption {\r\n    /** min value */\r\n    \"min\"?: number;\r\n    /** max value */\r\n    \"max\"?: number;\r\n    /** notifiers: indicates which actions to take when the property is changed */\r\n    \"notifiers\"?: {\r\n        /** the material should be rebuilt */\r\n        \"rebuild\"?: boolean;\r\n        /** the preview should be updated */\r\n        \"update\"?: boolean;\r\n    };\r\n    /** list of the options for a variable of type list */\r\n    \"options\"?: IEditablePropertyListOption[];\r\n}\r\n\r\n/**\r\n * Interface that describes an editable property\r\n */\r\nexport interface IPropertyDescriptionForEdition {\r\n    /** name of the property */\r\n    \"propertyName\": string;\r\n    /** display name of the property */\r\n    \"displayName\": string;\r\n    /** type of the property */\r\n    \"type\": PropertyTypeForEdition;\r\n    /** group of the property - all properties with the same group value will be displayed in a specific section */\r\n    \"groupName\": string;\r\n    /** options for the property */\r\n    \"options\": IEditablePropertyOption;\r\n}\r\n\r\n/**\r\n * Decorator that flags a property in a node material block as being editable\r\n */\r\nexport function editableInPropertyPage(displayName: string, propertyType: PropertyTypeForEdition = PropertyTypeForEdition.Boolean, groupName: string = \"PROPERTIES\", options?: IEditablePropertyOption) {\r\n    return (target: any, propertyKey: string) => {\r\n        let propStore: IPropertyDescriptionForEdition[] = target._propStore;\r\n        if (!propStore) {\r\n            propStore = [];\r\n            target._propStore = propStore;\r\n        }\r\n        propStore.push({\r\n            \"propertyName\": propertyKey,\r\n            \"displayName\": displayName,\r\n            \"type\": propertyType,\r\n            \"groupName\": groupName,\r\n            \"options\": options ?? {}\r\n        });\r\n    };\r\n}\r\n"]}