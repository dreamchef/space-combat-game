import { Vector3 } from "../../Maths/math.vector";
import { Mesh } from "../mesh";
/**
 * The options Interface for creating a Capsule Mesh
 */
export interface ICreateCapsuleOptions {
    /** The Orientation of the capsule.  Default : Vector3.Up() */
    orientation?: Vector3;
    /** Number of sub segments on the tube section of the capsule running parallel to orientation. */
    subdivisions: number;
    /** Number of cylindrical segments on the capsule. */
    tessellation: number;
    /** Height or Length of the capsule. */
    height: number;
    /** Radius of the capsule. */
    radius: number;
    /** Number of sub segments on the cap sections of the capsule running parallel to orientation. */
    capSubdivisions: number;
    /** Overwrite for the top radius. */
    radiusTop?: number;
    /** Overwrite for the bottom radius. */
    radiusBottom?: number;
    /** Overwrite for the top capSubdivisions. */
    topCapSubdivisions?: number;
    /** Overwrite for the bottom capSubdivisions. */
    bottomCapSubdivisions?: number;
}
/**
 * Class containing static functions to help procedurally build meshes
 */
export declare class CapsuleBuilder {
    /**
     * Creates a capsule or a pill mesh
     * @param name defines the name of the mesh
     * @param options The constructors options.
     * @param scene The scene the mesh is scoped to.
     * @returns Capsule Mesh
     */
    static CreateCapsule(name: string, options: ICreateCapsuleOptions | undefined, scene: any): Mesh;
}
