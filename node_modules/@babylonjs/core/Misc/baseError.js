import { __extends } from "tslib";
/**
 * @ignore
 * Application error to support additional information when loading a file
 */
var BaseError = /** @class */ (function (_super) {
    __extends(BaseError, _super);
    function BaseError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // See https://stackoverflow.com/questions/12915412/how-do-i-extend-a-host-object-e-g-error-in-typescript
    // and https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work
    // Polyfill for Object.setPrototypeOf if necessary.
    BaseError._setPrototypeOf = Object.setPrototypeOf || (function (o, proto) { o.__proto__ = proto; return o; });
    return BaseError;
}(Error));
export { BaseError };
//# sourceMappingURL=baseError.js.map