{"version":3,"file":"baseError.js","sourceRoot":"","sources":["../../../sourceES6/core/Misc/baseError.ts"],"names":[],"mappings":";AAAA;;;GAGG;AACH;IAAwC,6BAAK;IAA7C;;IAOA,CAAC;IANG,yGAAyG;IACzG,oIAAoI;IAEpI,mDAAmD;IAClC,yBAAe,GAC3B,MAAc,CAAC,cAAc,IAAI,CAAC,UAAC,CAAC,EAAE,KAAK,IAAO,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7F,gBAAC;CAAA,AAPD,CAAwC,KAAK,GAO5C;SAPqB,SAAS","sourcesContent":["/**\r\n * @ignore\r\n * Application error to support additional information when loading a file\r\n */\r\nexport abstract class BaseError extends Error {\r\n    // See https://stackoverflow.com/questions/12915412/how-do-i-extend-a-host-object-e-g-error-in-typescript\r\n    // and https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n\r\n    // Polyfill for Object.setPrototypeOf if necessary.\r\n    protected static _setPrototypeOf: (o: any, proto: object | null) => any =\r\n        (Object as any).setPrototypeOf || ((o, proto) => { o.__proto__ = proto; return o; });\r\n}"]}