{"version":3,"file":"canvasGenerator.js","sourceRoot":"","sources":["../../../sourceES6/core/Misc/canvasGenerator.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH;IAAA;IAkBA,CAAC;IAjBG;;;;;OAKG;IACW,4BAAY,GAA1B,UAA2B,KAAa,EAAE,MAAc;QACpD,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;YACjC,OAAO,IAAI,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SAC7C;QAED,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC9C,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAEvB,OAAO,MAAM,CAAC;IAClB,CAAC;IACL,sBAAC;AAAD,CAAC,AAlBD,IAkBC","sourcesContent":["/**\r\n * Helper class used to generate a canvas to manipulate images\r\n */\r\nexport class CanvasGenerator {\r\n    /**\r\n     * Create a new canvas (or offscreen canvas depending on the context)\r\n     * @param width defines the expected width\r\n     * @param height defines the expected height\r\n     * @return a new canvas or offscreen canvas\r\n     */\r\n    public static CreateCanvas(width: number, height: number): HTMLCanvasElement | OffscreenCanvas {\r\n        if (typeof document === \"undefined\") {\r\n            return new OffscreenCanvas(width, height);\r\n        }\r\n\r\n        let canvas = document.createElement(\"canvas\");\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        return canvas;\r\n    }\r\n}"]}