import { InternalTexture } from "../Materials/Textures/internalTexture";
/**
 * Based on jsTGALoader - Javascript loader for TGA file
 * By Vincent Thibault
 * @see http://blog.robrowser.com/javascript-tga-loader.html
 */
export declare class TGATools {
    private static _TYPE_INDEXED;
    private static _TYPE_RGB;
    private static _TYPE_GREY;
    private static _TYPE_RLE_INDEXED;
    private static _TYPE_RLE_RGB;
    private static _TYPE_RLE_GREY;
    private static _ORIGIN_MASK;
    private static _ORIGIN_SHIFT;
    private static _ORIGIN_BL;
    private static _ORIGIN_BR;
    private static _ORIGIN_UL;
    private static _ORIGIN_UR;
    /**
     * Gets the header of a TGA file
     * @param data defines the TGA data
     * @returns the header
     */
    static GetTGAHeader(data: Uint8Array): any;
    /**
     * Uploads TGA content to a Babylon Texture
     * @hidden
     */
    static UploadContent(texture: InternalTexture, data: Uint8Array): void;
    /** @hidden */
    static _getImageData8bits(header: any, palettes: Uint8Array, pixel_data: Uint8Array, y_start: number, y_step: number, y_end: number, x_start: number, x_step: number, x_end: number): Uint8Array;
    /** @hidden */
    static _getImageData16bits(header: any, palettes: Uint8Array, pixel_data: Uint8Array, y_start: number, y_step: number, y_end: number, x_start: number, x_step: number, x_end: number): Uint8Array;
    /** @hidden */
    static _getImageData24bits(header: any, palettes: Uint8Array, pixel_data: Uint8Array, y_start: number, y_step: number, y_end: number, x_start: number, x_step: number, x_end: number): Uint8Array;
    /** @hidden */
    static _getImageData32bits(header: any, palettes: Uint8Array, pixel_data: Uint8Array, y_start: number, y_step: number, y_end: number, x_start: number, x_step: number, x_end: number): Uint8Array;
    /** @hidden */
    static _getImageDataGrey8bits(header: any, palettes: Uint8Array, pixel_data: Uint8Array, y_start: number, y_step: number, y_end: number, x_start: number, x_step: number, x_end: number): Uint8Array;
    /** @hidden */
    static _getImageDataGrey16bits(header: any, palettes: Uint8Array, pixel_data: Uint8Array, y_start: number, y_step: number, y_end: number, x_start: number, x_step: number, x_end: number): Uint8Array;
}
