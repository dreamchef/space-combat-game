{"version":3,"file":"postProcessRenderPipeline.js","sourceRoot":"","sources":["../../../../sourceES6/core/PostProcesses/RenderPipeline/postProcessRenderPipeline.ts"],"names":[],"mappings":"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","sourcesContent":["import { Nullable } from \"../../types\";\r\nimport { Tools } from \"../../Misc/tools\";\r\nimport { serialize } from \"../../Misc/decorators\";\r\nimport { Camera } from \"../../Cameras/camera\";\r\nimport { Engine } from \"../../Engines/engine\";\r\nimport { PostProcessRenderEffect } from \"./postProcessRenderEffect\";\r\nimport { IInspectable } from '../../Misc/iInspectable';\r\n\r\ndeclare type PrePassRenderer = import(\"../../Rendering/prePassRenderer\").PrePassRenderer;\r\n\r\n/**\r\n * PostProcessRenderPipeline\r\n * @see https://doc.babylonjs.com/how_to/how_to_use_postprocessrenderpipeline\r\n */\r\nexport class PostProcessRenderPipeline {\r\n\r\n    private _renderEffects: { [key: string]: PostProcessRenderEffect };\r\n    private _renderEffectsForIsolatedPass: PostProcessRenderEffect[];\r\n\r\n    /**\r\n     * List of inspectable custom properties (used by the Inspector)\r\n     * @see https://doc.babylonjs.com/how_to/debug_layer#extensibility\r\n     */\r\n    public inspectableCustomProperties: IInspectable[];\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    protected _cameras: Camera[];\r\n\r\n    /** @hidden */\r\n    @serialize()\r\n    public _name: string;\r\n\r\n    /**\r\n     * Gets pipeline name\r\n     */\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    /** Gets the list of attached cameras */\r\n    public get cameras() {\r\n        return this._cameras;\r\n    }\r\n\r\n    /**\r\n     * Initializes a PostProcessRenderPipeline\r\n     * @param engine engine to add the pipeline to\r\n     * @param name name of the pipeline\r\n     */\r\n    constructor(private engine: Engine, name: string) {\r\n        this._name = name;\r\n\r\n        this._renderEffects = {};\r\n        this._renderEffectsForIsolatedPass = new Array<PostProcessRenderEffect>();\r\n\r\n        this._cameras = [];\r\n    }\r\n\r\n    /**\r\n     * Gets the class name\r\n     * @returns \"PostProcessRenderPipeline\"\r\n     */\r\n    public getClassName(): string {\r\n        return \"PostProcessRenderPipeline\";\r\n    }\r\n\r\n    /**\r\n     * If all the render effects in the pipeline are supported\r\n     */\r\n    public get isSupported(): boolean {\r\n        for (var renderEffectName in this._renderEffects) {\r\n            if (this._renderEffects.hasOwnProperty(renderEffectName)) {\r\n                if (!this._renderEffects[renderEffectName].isSupported) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Adds an effect to the pipeline\r\n     * @param renderEffect the effect to add\r\n     */\r\n    public addEffect(renderEffect: PostProcessRenderEffect): void {\r\n        (<any>this._renderEffects)[renderEffect._name] = renderEffect;\r\n    }\r\n\r\n    // private\r\n\r\n    /** @hidden */\r\n    public _rebuild() {\r\n\r\n    }\r\n\r\n    /** @hidden */\r\n    public _enableEffect(renderEffectName: string, cameras: Camera): void;\r\n    /** @hidden */\r\n    public _enableEffect(renderEffectName: string, cameras: Camera[]): void;\r\n    /** @hidden */\r\n    public _enableEffect(renderEffectName: string, cameras: any): void {\r\n        var renderEffects: PostProcessRenderEffect = (<any>this._renderEffects)[renderEffectName];\r\n\r\n        if (!renderEffects) {\r\n            return;\r\n        }\r\n\r\n        renderEffects._enable(Tools.MakeArray(cameras || this._cameras));\r\n    }\r\n\r\n    /** @hidden */\r\n    public _disableEffect(renderEffectName: string, cameras: Nullable<Camera[]>): void;\r\n    /** @hidden */\r\n    public _disableEffect(renderEffectName: string, cameras: Nullable<Camera[]>): void;\r\n    /** @hidden */\r\n    public _disableEffect(renderEffectName: string, cameras: Nullable<Camera[]>): void {\r\n        var renderEffects: PostProcessRenderEffect = (<any>this._renderEffects)[renderEffectName];\r\n\r\n        if (!renderEffects) {\r\n            return;\r\n        }\r\n\r\n        renderEffects._disable(Tools.MakeArray(cameras || this._cameras));\r\n    }\r\n\r\n    /** @hidden */\r\n    public _attachCameras(cameras: Camera, unique: boolean): void;\r\n    /** @hidden */\r\n    public _attachCameras(cameras: Camera[], unique: boolean): void;\r\n    /** @hidden */\r\n    public _attachCameras(cameras: any, unique: boolean): void {\r\n        var cams = Tools.MakeArray(cameras || this._cameras);\r\n\r\n        if (!cams) {\r\n            return;\r\n        }\r\n\r\n        var indicesToDelete = [];\r\n        var i: number;\r\n        for (i = 0; i < cams.length; i++) {\r\n            var camera = cams[i];\r\n            if (!camera) {\r\n                continue;\r\n            }\r\n            var cameraName = camera.name;\r\n\r\n            if (this._cameras.indexOf(camera) === -1) {\r\n                this._cameras[cameraName] = camera;\r\n            }\r\n            else if (unique) {\r\n                indicesToDelete.push(i);\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < indicesToDelete.length; i++) {\r\n            cameras.splice(indicesToDelete[i], 1);\r\n        }\r\n\r\n        for (var renderEffectName in this._renderEffects) {\r\n            if (this._renderEffects.hasOwnProperty(renderEffectName)) {\r\n                this._renderEffects[renderEffectName]._attachCameras(cams);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @hidden */\r\n    public _detachCameras(cameras: Camera): void;\r\n    /** @hidden */\r\n    public _detachCameras(cameras: Nullable<Camera[]>): void;\r\n    /** @hidden */\r\n    public _detachCameras(cameras: any): void {\r\n        var cams = Tools.MakeArray(cameras || this._cameras);\r\n\r\n        if (!cams) {\r\n            return;\r\n        }\r\n\r\n        for (var renderEffectName in this._renderEffects) {\r\n            if (this._renderEffects.hasOwnProperty(renderEffectName)) {\r\n                this._renderEffects[renderEffectName]._detachCameras(cams);\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < cams.length; i++) {\r\n            this._cameras.splice(this._cameras.indexOf(cams[i]), 1);\r\n        }\r\n    }\r\n\r\n    /** @hidden */\r\n    public _update(): void {\r\n        for (var renderEffectName in this._renderEffects) {\r\n            if (this._renderEffects.hasOwnProperty(renderEffectName)) {\r\n                this._renderEffects[renderEffectName]._update();\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < this._cameras.length; i++) {\r\n            if (! this._cameras[i]) {\r\n                continue;\r\n            }\r\n            var cameraName = this._cameras[i].name;\r\n            if ((<any>this._renderEffectsForIsolatedPass)[cameraName]) {\r\n                (<any>this._renderEffectsForIsolatedPass)[cameraName]._update();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @hidden */\r\n    public _reset(): void {\r\n        this._renderEffects = {};\r\n        this._renderEffectsForIsolatedPass = new Array<PostProcessRenderEffect>();\r\n    }\r\n\r\n    protected _enableMSAAOnFirstPostProcess(sampleCount: number): boolean {\r\n        if (this.engine.webGLVersion === 1) {\r\n            return false;\r\n        }\r\n\r\n        // Set samples of the very first post process to 4 to enable native anti-aliasing in browsers that support webGL 2.0 (See: https://github.com/BabylonJS/Babylon.js/issues/3754)\r\n        var effectKeys = Object.keys(this._renderEffects);\r\n        if (effectKeys.length > 0) {\r\n            var postProcesses = this._renderEffects[effectKeys[0]].getPostProcesses();\r\n            if (postProcesses) {\r\n                postProcesses[0].samples = sampleCount;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Sets the required values to the prepass renderer.\r\n     * @param prePassRenderer defines the prepass renderer to setup.\r\n     * @returns true if the pre pass is needed.\r\n     */\r\n    public setPrePassRenderer(prePassRenderer: PrePassRenderer): boolean {\r\n        // Do Nothing by default\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Disposes of the pipeline\r\n     */\r\n    public dispose() {\r\n        // Must be implemented by children\r\n    }\r\n}\r\n"]}