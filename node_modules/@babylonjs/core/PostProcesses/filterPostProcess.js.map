{"version":3,"file":"filterPostProcess.js","sourceRoot":"","sources":["../../../sourceES6/core/PostProcesses/filterPostProcess.ts"],"names":[],"mappings":";AAIA,OAAO,EAAE,WAAW,EAAsB,MAAM,eAAe,CAAC;AAGhE,OAAO,4BAA4B,CAAC;AACpC,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAI5E;;GAEG;AACH;IAAuC,qCAAW;IAa9C;;;;;;;;;OASG;IACH,2BAAY,IAAY,EACpB,YAAoB,EACpB,OAAoC,EACpC,MAAwB,EACxB,YAAqB,EACrB,MAAe,EACf,QAAkB;QANtB,YAQI,kBAAM,IAAI,EAAE,QAAQ,EAAE,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,CAAC,SAMjG;QALG,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAEjC,KAAI,CAAC,OAAO,GAAG,UAAC,MAAc;YAC1B,MAAM,CAAC,SAAS,CAAC,cAAc,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;QACxD,CAAC,CAAC;;IACN,CAAC;IAhCD;;;OAGG;IACI,wCAAY,GAAnB;QACI,OAAO,mBAAmB,CAAC;IAC/B,CAAC;IA4BD,cAAc;IACA,wBAAM,GAApB,UAAqB,iBAAsB,EAAE,YAAoB,EAAE,KAAY,EAAE,OAAe;QAC5F,OAAO,mBAAmB,CAAC,KAAK,CAAC;YAC7B,OAAO,IAAI,iBAAiB,CACxB,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,YAAY,EACtD,iBAAiB,CAAC,OAAO,EAAE,YAAY,EACvC,iBAAiB,CAAC,wBAAwB,EAC1C,KAAK,CAAC,SAAS,EAAE,EAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACvD,CAAC,EAAE,iBAAiB,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IA7CD;QADC,iBAAiB,EAAE;2DACQ;IA8ChC,wBAAC;CAAA,AAjDD,CAAuC,WAAW,GAiDjD;SAjDY,iBAAiB;AAmD9B,UAAU,CAAC,eAAe,CAAC,2BAA2B,CAAC,GAAG,iBAAiB,CAAC","sourcesContent":["import { Nullable } from \"../types\";\r\nimport { Matrix } from \"../Maths/math.vector\";\r\nimport { Camera } from \"../Cameras/camera\";\r\nimport { Effect } from \"../Materials/effect\";\r\nimport { PostProcess, PostProcessOptions } from \"./postProcess\";\r\nimport { Engine } from \"../Engines/engine\";\r\n\r\nimport \"../Shaders/filter.fragment\";\r\nimport { _TypeStore } from '../Misc/typeStore';\r\nimport { serializeAsMatrix, SerializationHelper } from '../Misc/decorators';\r\n\r\ndeclare type Scene = import(\"../scene\").Scene;\r\n\r\n/**\r\n * Applies a kernel filter to the image\r\n */\r\nexport class FilterPostProcess extends PostProcess {\r\n    /** The matrix to be applied to the image */\r\n    @serializeAsMatrix()\r\n    public kernelMatrix: Matrix;\r\n\r\n    /**\r\n     * Gets a string identifying the name of the class\r\n     * @returns \"FilterPostProcess\" string\r\n     */\r\n    public getClassName(): string {\r\n        return \"FilterPostProcess\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param name The name of the effect.\r\n     * @param kernelMatrix The matrix to be applied to the image\r\n     * @param options The required width/height ratio to downsize to before computing the render pass.\r\n     * @param camera The camera to apply the render pass to.\r\n     * @param samplingMode The sampling mode to be used when computing the pass. (default: 0)\r\n     * @param engine The engine which the post process will be applied. (default: current engine)\r\n     * @param reusable If the post process can be reused on the same frame. (default: false)\r\n     */\r\n    constructor(name: string,\r\n        kernelMatrix: Matrix,\r\n        options: number | PostProcessOptions,\r\n        camera: Nullable<Camera>,\r\n        samplingMode?: number,\r\n        engine?: Engine,\r\n        reusable?: boolean\r\n    ) {\r\n        super(name, \"filter\", [\"kernelMatrix\"], null, options, camera, samplingMode, engine, reusable);\r\n        this.kernelMatrix = kernelMatrix;\r\n\r\n        this.onApply = (effect: Effect) => {\r\n            effect.setMatrix(\"kernelMatrix\", this.kernelMatrix);\r\n        };\r\n    }\r\n\r\n    /** @hidden */\r\n    public static _Parse(parsedPostProcess: any, targetCamera: Camera, scene: Scene, rootUrl: string): Nullable<FilterPostProcess> {\r\n        return SerializationHelper.Parse(() => {\r\n            return new FilterPostProcess(\r\n                parsedPostProcess.name, parsedPostProcess.kernelMatrix,\r\n                parsedPostProcess.options, targetCamera,\r\n                parsedPostProcess.renderTargetSamplingMode,\r\n                scene.getEngine(), parsedPostProcess.reusable);\r\n        }, parsedPostProcess, scene, rootUrl);\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.FilterPostProcess\"] = FilterPostProcess;\r\n"]}