{"version":3,"file":"fxaaPostProcess.js","sourceRoot":"","sources":["../../../sourceES6/core/PostProcesses/fxaaPostProcess.ts"],"names":[],"mappings":";AAGA,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AACxD,OAAO,EAAE,WAAW,EAAsB,MAAM,eAAe,CAAC;AAIhE,OAAO,0BAA0B,CAAC;AAClC,OAAO,wBAAwB,CAAC;AAChC,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAGzD;;;GAGG;AACH;IAAqC,mCAAW;IAS5C,yBAAY,IAAY,EAAE,OAAoC,EAAE,MAA+B,EAAE,YAAqB,EAAE,MAAe,EAAE,QAAkB,EAAE,WAAuB;QAApH,uBAAA,EAAA,aAA+B;QAA8D,4BAAA,EAAA,eAAuB;QAApL,YACI,kBAAM,IAAI,EAAE,MAAM,EAAE,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,IAAI,OAAO,CAAC,qBAAqB,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,SASzK;QAPG,IAAM,OAAO,GAAG,KAAI,CAAC,WAAW,EAAE,CAAC;QACnC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAE3B,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAC,MAAc;YACtC,IAAI,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC/B,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;;IACP,CAAC;IAlBD;;;OAGG;IACI,sCAAY,GAAnB;QACI,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAcO,qCAAW,GAAnB;QACI,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,IAAI,CAAC;SACf;QAED,IAAM,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;QAClC,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;YACjF,OAAO,kBAAkB,CAAC;SAC7B;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,cAAc;IACA,sBAAM,GAApB,UAAqB,iBAAsB,EAAE,YAAoB,EAAE,KAAY,EAAE,OAAe;QAC5F,OAAO,mBAAmB,CAAC,KAAK,CAAC;YAC7B,OAAO,IAAI,eAAe,CACtB,iBAAiB,CAAC,IAAI,EACtB,iBAAiB,CAAC,OAAO,EAAE,YAAY,EACvC,iBAAiB,CAAC,wBAAwB,EAC1C,KAAK,CAAC,SAAS,EAAE,EAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACvD,CAAC,EAAE,iBAAiB,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IACL,sBAAC;AAAD,CAAC,AA7CD,CAAqC,WAAW,GA6C/C;;AAED,UAAU,CAAC,eAAe,CAAC,yBAAyB,CAAC,GAAG,eAAe,CAAC","sourcesContent":["import { Nullable } from \"../types\";\r\nimport { Camera } from \"../Cameras/camera\";\r\nimport { Effect } from \"../Materials/effect\";\r\nimport { Texture } from \"../Materials/Textures/texture\";\r\nimport { PostProcess, PostProcessOptions } from \"./postProcess\";\r\nimport { Engine } from \"../Engines/engine\";\r\n\r\n\r\nimport \"../Shaders/fxaa.fragment\";\r\nimport \"../Shaders/fxaa.vertex\";\r\nimport { _TypeStore } from '../Misc/typeStore';\r\nimport { SerializationHelper } from '../Misc/decorators';\r\n\r\ndeclare type Scene = import(\"../scene\").Scene;\r\n/**\r\n * Fxaa post process\r\n * @see https://doc.babylonjs.com/how_to/how_to_use_postprocesses#fxaa\r\n */\r\nexport class FxaaPostProcess extends PostProcess {\r\n    /**\r\n     * Gets a string identifying the name of the class\r\n     * @returns \"FxaaPostProcess\" string\r\n     */\r\n    public getClassName(): string {\r\n        return \"FxaaPostProcess\";\r\n    }\r\n\r\n    constructor(name: string, options: number | PostProcessOptions, camera: Nullable<Camera> = null, samplingMode?: number, engine?: Engine, reusable?: boolean, textureType: number = 0) {\r\n        super(name, \"fxaa\", [\"texelSize\"], null, options, camera, samplingMode || Texture.BILINEAR_SAMPLINGMODE, engine, reusable, null, textureType, \"fxaa\", undefined, true);\r\n\r\n        const defines = this._getDefines();\r\n        this.updateEffect(defines);\r\n\r\n        this.onApplyObservable.add((effect: Effect) => {\r\n            var texelSize = this.texelSize;\r\n            effect.setFloat2(\"texelSize\", texelSize.x, texelSize.y);\r\n        });\r\n    }\r\n\r\n    private _getDefines(): Nullable<string> {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return null;\r\n        }\r\n\r\n        const glInfo = engine.getGlInfo();\r\n        if (glInfo && glInfo.renderer && glInfo.renderer.toLowerCase().indexOf(\"mali\") > -1) {\r\n            return \"#define MALI 1\\n\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /** @hidden */\r\n    public static _Parse(parsedPostProcess: any, targetCamera: Camera, scene: Scene, rootUrl: string) {\r\n        return SerializationHelper.Parse(() => {\r\n            return new FxaaPostProcess(\r\n                parsedPostProcess.name,\r\n                parsedPostProcess.options, targetCamera,\r\n                parsedPostProcess.renderTargetSamplingMode,\r\n                scene.getEngine(), parsedPostProcess.reusable);\r\n        }, parsedPostProcess, scene, rootUrl);\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.FxaaPostProcess\"] = FxaaPostProcess;"]}