{"version":3,"file":"vrMultiviewToSingleviewPostProcess.js","sourceRoot":"","sources":["../../../sourceES6/core/PostProcesses/vrMultiviewToSingleviewPostProcess.ts"],"names":[],"mappings":";AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AACxD,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,OAAO,6CAA6C,CAAC;AACrD,OAAO,wCAAwC,CAAC;AAEhD;;;GAGG;AACH;IAAwD,sDAAW;IAS/D;;;;;OAKG;IACH,4CAAY,IAAY,EAAE,MAAc,EAAE,WAAmB;QAA7D,YACI,kBAAM,IAAI,EAAE,yBAAyB,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,kBAAkB,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,qBAAqB,CAAC,SAYnI;QAVG,KAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAC,MAAc;YACtC,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,EAAE;gBACvE,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;aAClC;iBAAK;gBACF,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;aAClC;YACD,MAAM,CAAC,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;;IACP,CAAC;IA3BD;;;OAGG;IACI,yDAAY,GAAnB;QACI,OAAO,oCAAoC,CAAC;IAChD,CAAC;IAsBL,yCAAC;AAAD,CAAC,AA7BD,CAAwD,WAAW,GA6BlE","sourcesContent":["import { Camera } from \"../Cameras/camera\";\r\nimport { Effect } from \"../Materials/effect\";\r\nimport { Texture } from \"../Materials/Textures/texture\";\r\nimport { PostProcess } from \"./postProcess\";\r\n\r\nimport \"../Shaders/vrMultiviewToSingleview.fragment\";\r\nimport \"../Engines/Extensions/engine.multiview\";\r\n\r\n/**\r\n * VRMultiviewToSingleview used to convert multiview texture arrays to standard textures for scenarios such as webVR\r\n * This will not be used for webXR as it supports displaying texture arrays directly\r\n */\r\nexport class VRMultiviewToSingleviewPostProcess extends PostProcess {\r\n    /**\r\n     * Gets a string identifying the name of the class\r\n     * @returns \"VRMultiviewToSingleviewPostProcess\" string\r\n     */\r\n    public getClassName(): string {\r\n        return \"VRMultiviewToSingleviewPostProcess\";\r\n    }\r\n\r\n    /**\r\n     * Initializes a VRMultiviewToSingleview\r\n     * @param name name of the post process\r\n     * @param camera camera to be applied to\r\n     * @param scaleFactor scaling factor to the size of the output texture\r\n     */\r\n    constructor(name: string, camera: Camera, scaleFactor: number) {\r\n        super(name, \"vrMultiviewToSingleview\", [\"imageIndex\"], [\"multiviewSampler\"], scaleFactor, camera, Texture.BILINEAR_SAMPLINGMODE);\r\n\r\n        this.onSizeChangedObservable.add(() => {\r\n        });\r\n        this.onApplyObservable.add((effect: Effect) => {\r\n            if (camera._scene.activeCamera && camera._scene.activeCamera.isLeftCamera) {\r\n                effect.setInt(\"imageIndex\", 0);\r\n            }else {\r\n                effect.setInt(\"imageIndex\", 1);\r\n            }\r\n            effect.setTexture(\"multiviewSampler\", camera._multiviewTexture);\r\n        });\r\n    }\r\n}\r\n"]}