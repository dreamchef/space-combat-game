{"version":3,"file":"pbrBlockNormalGeometric.js","sourceRoot":"","sources":["../../../../sourceES6/core/Shaders/ShadersInclude/pbrBlockNormalGeometric.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAEhD,IAAI,IAAI,GAAG,yBAAyB,CAAC;AACrC,IAAI,MAAM,GAAG,qXAUZ,CAAC;AAEF,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAC3C,cAAc;AACd,MAAM,CAAC,IAAI,uBAAuB,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["import { Effect } from \"../../Materials/effect\";\n\nlet name = 'pbrBlockNormalGeometric';\nlet shader = `vec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=normalize(cross(dFdx(vPositionW),dFdy(vPositionW)))*vEyePosition.w;\n#endif\nvec3 geometricNormalW=normalW;\n#if defined(TWOSIDEDLIGHTING) && defined(NORMAL)\ngeometricNormalW=gl_FrontFacing ? geometricNormalW : -geometricNormalW;\n#endif\n`;\n\nEffect.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport var pbrBlockNormalGeometric = { name, shader };\n"]}