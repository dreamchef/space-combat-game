{"version":3,"file":"shadowMapVertexNormalBias.js","sourceRoot":"","sources":["../../../../sourceES6/core/Shaders/ShadersInclude/shadowMapVertexNormalBias.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAEhD,IAAI,IAAI,GAAG,2BAA2B,CAAC;AACvC,IAAI,MAAM,GAAG,0ZAaZ,CAAC;AAEF,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAC3C,cAAc;AACd,MAAM,CAAC,IAAI,yBAAyB,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["import { Effect } from \"../../Materials/effect\";\n\nlet name = 'shadowMapVertexNormalBias';\nlet shader = `\n#if SM_NORMALBIAS == 1\n#if SM_DIRECTIONINLIGHTDATA == 1\nvec3 worldLightDirSM=normalize(-lightDataSM.xyz);\n#else\nvec3 directionToLightSM=lightDataSM.xyz-worldPos.xyz;\nvec3 worldLightDirSM=normalize(directionToLightSM);\n#endif\nfloat ndlSM=dot(vNormalW,worldLightDirSM);\nfloat sinNLSM=sqrt(1.0-ndlSM*ndlSM);\nfloat normalBiasSM=biasAndScaleSM.y*sinNLSM;\nworldPos.xyz-=vNormalW*normalBiasSM;\n#endif\n`;\n\nEffect.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport var shadowMapVertexNormalBias = { name, shader };\n"]}