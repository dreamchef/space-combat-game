{"version":3,"file":"webXRTypes.js","sourceRoot":"","sources":["../../../sourceES6/core/XR/webXRTypes.ts"],"names":[],"mappings":"AAGA;;GAEG;AACH,MAAM,CAAN,IAAY,UAiBX;AAjBD,WAAY,UAAU;IAClB;;OAEG;IACH,yDAAW,CAAA;IACX;;OAEG;IACH,uDAAU,CAAA;IACV;;OAEG;IACH,6CAAK,CAAA;IACL;;OAEG;IACH,qDAAS,CAAA;AACb,CAAC,EAjBW,UAAU,KAAV,UAAU,QAiBrB;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,kBAaX;AAbD,WAAY,kBAAkB;IAC1B;;OAEG;IACH,2EAAY,CAAA;IACZ;;OAEG;IACH,6EAAa,CAAA;IACb;;OAEG;IACH,mEAAQ,CAAA;AACZ,CAAC,EAbW,kBAAkB,KAAlB,kBAAkB,QAa7B","sourcesContent":["import { Nullable } from \"../types\";\nimport { IDisposable } from \"../scene\";\n\n/**\n * States of the webXR experience\n */\nexport enum WebXRState {\n    /**\n     * Transitioning to being in XR mode\n     */\n    ENTERING_XR,\n    /**\n     * Transitioning to non XR mode\n     */\n    EXITING_XR,\n    /**\n     * In XR mode and presenting\n     */\n    IN_XR,\n    /**\n     * Not entered XR mode\n     */\n    NOT_IN_XR,\n}\n\n/**\n * The state of the XR camera's tracking\n */\nexport enum WebXRTrackingState {\n    /**\n     * No transformation received, device is not being tracked\n     */\n    NOT_TRACKING,\n    /**\n     * Tracking lost - using emulated position\n     */\n    TRACKING_LOST,\n    /**\n     * Transformation tracking works normally\n     */\n    TRACKING\n}\n\n/**\n * Abstraction of the XR render target\n */\nexport interface WebXRRenderTarget extends IDisposable {\n    /**\n     * xrpresent context of the canvas which can be used to display/mirror xr content\n     */\n    canvasContext: WebGLRenderingContext;\n\n    /**\n     * xr layer for the canvas\n     */\n    xrLayer: Nullable<XRWebGLLayer>;\n\n    /**\n     * Initializes the xr layer for the session\n     * @param xrSession xr session\n     * @returns a promise that will resolve once the XR Layer has been created\n     */\n    initializeXRLayerAsync(xrSession: XRSession): Promise<XRWebGLLayer>;\n}\n"]}