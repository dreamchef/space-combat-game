{"version":3,"file":"control.js","sourceRoot":"","sources":["../../../../sourceES6/gui/src/2D/controls/control.ts"],"names":[],"mappings":"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","sourcesContent":["import { Nullable } from \"@babylonjs/core/types\";\nimport { Observable, Observer } from \"@babylonjs/core/Misc/observable\";\nimport { Vector2, Vector3, Matrix } from \"@babylonjs/core/Maths/math.vector\";\nimport { PointerEventTypes, PointerInfoBase } from '@babylonjs/core/Events/pointerEvents';\nimport { Logger } from \"@babylonjs/core/Misc/logger\";\nimport { Tools } from \"@babylonjs/core/Misc/tools\";\nimport { TransformNode } from \"@babylonjs/core/Meshes/transformNode\";\nimport { Scene } from \"@babylonjs/core/scene\";\n\nimport { Container } from \"./container\";\nimport { AdvancedDynamicTexture } from \"../advancedDynamicTexture\";\nimport { ValueAndUnit } from \"../valueAndUnit\";\nimport { Measure } from \"../measure\";\nimport { Style } from \"../style\";\nimport { Matrix2D, Vector2WithInfo } from \"../math2D\";\nimport { _TypeStore } from '@babylonjs/core/Misc/typeStore';\n\n/**\n * Root class used for all 2D controls\n * @see https://doc.babylonjs.com/how_to/gui#controls\n */\nexport class Control {\n    /**\n     * Gets or sets a boolean indicating if alpha must be an inherited value (false by default)\n     */\n    public static AllowAlphaInheritance = false;\n\n    private _alpha = 1;\n    private _alphaSet = false;\n    private _zIndex = 0;\n    /** @hidden */\n    public _host: AdvancedDynamicTexture;\n    /** Gets or sets the control parent */\n    public parent: Nullable<Container>;\n    /** @hidden */\n    public _currentMeasure = Measure.Empty();\n    private _fontFamily = \"Arial\";\n    private _fontStyle = \"\";\n    private _fontWeight = \"\";\n    private _fontSize = new ValueAndUnit(18, ValueAndUnit.UNITMODE_PIXEL, false);\n    private _font: string;\n    /** @hidden */\n    public _width = new ValueAndUnit(1, ValueAndUnit.UNITMODE_PERCENTAGE, false);\n    /** @hidden */\n    public _height = new ValueAndUnit(1, ValueAndUnit.UNITMODE_PERCENTAGE, false);\n    /** @hidden */\n    protected _fontOffset: { ascent: number, height: number, descent: number };\n    private _color = \"\";\n    private _style: Nullable<Style> = null;\n    private _styleObserver: Nullable<Observer<Style>>;\n    /** @hidden */\n    protected _horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n    /** @hidden */\n    protected _verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n    /** @hidden */\n    protected _isDirty = true;\n    /** @hidden */\n    protected _wasDirty = false;\n    /** @hidden */\n    public _tempParentMeasure = Measure.Empty();\n    /** @hidden */\n    public _prevCurrentMeasureTransformedIntoGlobalSpace = Measure.Empty();\n    /** @hidden */\n    protected _cachedParentMeasure = Measure.Empty();\n    private _paddingLeft = new ValueAndUnit(0);\n    private _paddingRight = new ValueAndUnit(0);\n    private _paddingTop = new ValueAndUnit(0);\n    private _paddingBottom = new ValueAndUnit(0);\n    /** @hidden */\n    public _left = new ValueAndUnit(0);\n    /** @hidden */\n    public _top = new ValueAndUnit(0);\n    private _scaleX = 1.0;\n    private _scaleY = 1.0;\n    private _rotation = 0;\n    private _transformCenterX = 0.5;\n    private _transformCenterY = 0.5;\n    /** @hidden */\n    public _transformMatrix = Matrix2D.Identity();\n    /** @hidden */\n    protected _invertTransformMatrix = Matrix2D.Identity();\n    /** @hidden */\n    protected _transformedPosition = Vector2.Zero();\n    private _isMatrixDirty = true;\n    private _cachedOffsetX: number;\n    private _cachedOffsetY: number;\n    private _isVisible = true;\n    private _isHighlighted = false;\n    /** @hidden */\n    public _linkedMesh: Nullable<TransformNode>;\n    private _fontSet = false;\n    private _dummyVector2 = Vector2.Zero();\n    private _downCount = 0;\n    private _enterCount = -1;\n    private _doNotRender = false;\n    private _downPointerIds: { [id: number]: boolean } = {};\n    protected _isEnabled = true;\n    protected _disabledColor = \"#9a9a9a\";\n    protected _disabledColorItem = \"#6a6a6a\";\n    /** @hidden */\n    protected _rebuildLayout = false;\n\n    /** @hidden */\n    public _customData: any = {};\n\n    /** @hidden */\n    public _isClipped = false;\n\n    /** @hidden */\n    public _automaticSize = false;\n\n    /** @hidden */\n    public _tag: any;\n\n    /**\n     * Gets or sets the unique id of the node. Please note that this number will be updated when the control is added to a container\n     */\n    public uniqueId: number;\n\n    /**\n     * Gets or sets an object used to store user defined information for the node\n     */\n    public metadata: any = null;\n\n    /** Gets or sets a boolean indicating if the control can be hit with pointer events */\n    public isHitTestVisible = true;\n    /** Gets or sets a boolean indicating if the control can block pointer events */\n    public isPointerBlocker = false;\n    /** Gets or sets a boolean indicating if the control can be focusable */\n    public isFocusInvisible = false;\n\n    /**\n     * Gets or sets a boolean indicating if the children are clipped to the current control bounds.\n     * Please note that not clipping children may generate issues with adt.useInvalidateRectOptimization so it is recommended to turn this optimization off if you want to use unclipped children\n     */\n    public clipChildren = true;\n\n    /**\n     * Gets or sets a boolean indicating that control content must be clipped\n     * Please note that not clipping children may generate issues with adt.useInvalidateRectOptimization so it is recommended to turn this optimization off if you want to use unclipped children\n     */\n    public clipContent = true;\n\n    /**\n     * Gets or sets a boolean indicating that the current control should cache its rendering (useful when the control does not change often)\n     */\n    public useBitmapCache = false;\n\n    private _cacheData: Nullable<ImageData>;\n\n    private _shadowOffsetX = 0;\n    /** Gets or sets a value indicating the offset to apply on X axis to render the shadow */\n    public get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    public set shadowOffsetX(value: number) {\n        if (this._shadowOffsetX === value) {\n            return;\n        }\n\n        this._shadowOffsetX = value;\n        this._markAsDirty();\n    }\n\n    private _shadowOffsetY = 0;\n    /** Gets or sets a value indicating the offset to apply on Y axis to render the shadow */\n    public get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    public set shadowOffsetY(value: number) {\n        if (this._shadowOffsetY === value) {\n            return;\n        }\n\n        this._shadowOffsetY = value;\n        this._markAsDirty();\n    }\n\n    private _shadowBlur = 0;\n    /** Gets or sets a value indicating the amount of blur to use to render the shadow */\n    public get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    public set shadowBlur(value: number) {\n        if (this._shadowBlur === value) {\n            return;\n        }\n\n        this._shadowBlur = value;\n        this._markAsDirty();\n    }\n\n    private _shadowColor = 'black';\n    /** Gets or sets a value indicating the color of the shadow (black by default ie. \"#000\") */\n    public get shadowColor() {\n        return this._shadowColor;\n    }\n\n    public set shadowColor(value: string) {\n        if (this._shadowColor === value) {\n            return;\n        }\n\n        this._shadowColor = value;\n        this._markAsDirty();\n    }\n\n    /** Gets or sets the cursor to use when the control is hovered */\n    public hoverCursor = \"\";\n\n    /** @hidden */\n    protected _linkOffsetX = new ValueAndUnit(0);\n    /** @hidden */\n    protected _linkOffsetY = new ValueAndUnit(0);\n\n    // Properties\n\n    /** Gets the control type name */\n    public get typeName(): string {\n        return this._getTypeName();\n    }\n\n    /**\n     * Get the current class name of the control.\n     * @returns current class name\n     */\n    public getClassName(): string {\n        return this._getTypeName();\n    }\n\n    /**\n    * An event triggered when pointer wheel is scrolled\n    */\n    public onWheelObservable = new Observable<Vector2>();\n    /**\n    * An event triggered when the pointer move over the control.\n    */\n    public onPointerMoveObservable = new Observable<Vector2>();\n\n    /**\n    * An event triggered when the pointer move out of the control.\n    */\n    public onPointerOutObservable = new Observable<Control>();\n\n    /**\n    * An event triggered when the pointer taps the control\n    */\n    public onPointerDownObservable = new Observable<Vector2WithInfo>();\n\n    /**\n    * An event triggered when pointer up\n    */\n    public onPointerUpObservable = new Observable<Vector2WithInfo>();\n\n    /**\n    * An event triggered when a control is clicked on\n    */\n    public onPointerClickObservable = new Observable<Vector2WithInfo>();\n\n    /**\n    * An event triggered when pointer enters the control\n    */\n    public onPointerEnterObservable = new Observable<Control>();\n\n    /**\n    * An event triggered when the control is marked as dirty\n    */\n    public onDirtyObservable = new Observable<Control>();\n\n    /**\n     * An event triggered before drawing the control\n     */\n    public onBeforeDrawObservable = new Observable<Control>();\n\n    /**\n     * An event triggered after the control was drawn\n     */\n    public onAfterDrawObservable = new Observable<Control>();\n\n    /**\n    * An event triggered when the control has been disposed\n    */\n   public onDisposeObservable = new Observable<Control>();\n\n    /**\n     * Get the hosting AdvancedDynamicTexture\n     */\n    public get host(): AdvancedDynamicTexture {\n        return this._host;\n    }\n\n    /** Gets or set information about font offsets (used to render and align text) */\n    public get fontOffset(): { ascent: number, height: number, descent: number } {\n        return this._fontOffset;\n    }\n\n    public set fontOffset(offset: { ascent: number, height: number, descent: number }) {\n        this._fontOffset = offset;\n    }\n\n    /** Gets or sets alpha value for the control (1 means opaque and 0 means entirely transparent) */\n    public get alpha(): number {\n        return this._alpha;\n    }\n\n    public set alpha(value: number) {\n        if (this._alpha === value) {\n            return;\n        }\n        this._alphaSet = true;\n        this._alpha = value;\n        this._markAsDirty();\n    }\n\n    /**\n     * Gets or sets a boolean indicating that we want to highlight the control (mostly for debugging purpose)\n     */\n    public get isHighlighted(): boolean {\n        return this._isHighlighted;\n    }\n\n    public set isHighlighted(value: boolean) {\n        if (this._isHighlighted === value) {\n            return;\n        }\n\n        this._isHighlighted = value;\n        this._markAsDirty();\n    }\n\n    /** Gets or sets a value indicating the scale factor on X axis (1 by default)\n     * @see https://doc.babylonjs.com/how_to/gui#rotation-and-scaling\n    */\n    public get scaleX(): number {\n        return this._scaleX;\n    }\n\n    public set scaleX(value: number) {\n        if (this._scaleX === value) {\n            return;\n        }\n\n        this._scaleX = value;\n        this._markAsDirty();\n        this._markMatrixAsDirty();\n    }\n\n    /** Gets or sets a value indicating the scale factor on Y axis (1 by default)\n     * @see https://doc.babylonjs.com/how_to/gui#rotation-and-scaling\n    */\n    public get scaleY(): number {\n        return this._scaleY;\n    }\n\n    public set scaleY(value: number) {\n        if (this._scaleY === value) {\n            return;\n        }\n\n        this._scaleY = value;\n        this._markAsDirty();\n        this._markMatrixAsDirty();\n    }\n\n    /** Gets or sets the rotation angle (0 by default)\n     * @see https://doc.babylonjs.com/how_to/gui#rotation-and-scaling\n    */\n    public get rotation(): number {\n        return this._rotation;\n    }\n\n    public set rotation(value: number) {\n        if (this._rotation === value) {\n            return;\n        }\n\n        this._rotation = value;\n        this._markAsDirty();\n        this._markMatrixAsDirty();\n    }\n\n    /** Gets or sets the transformation center on Y axis (0 by default)\n     * @see https://doc.babylonjs.com/how_to/gui#rotation-and-scaling\n    */\n    public get transformCenterY(): number {\n        return this._transformCenterY;\n    }\n\n    public set transformCenterY(value: number) {\n        if (this._transformCenterY === value) {\n            return;\n        }\n\n        this._transformCenterY = value;\n        this._markAsDirty();\n        this._markMatrixAsDirty();\n    }\n\n    /** Gets or sets the transformation center on X axis (0 by default)\n     * @see https://doc.babylonjs.com/how_to/gui#rotation-and-scaling\n    */\n    public get transformCenterX(): number {\n        return this._transformCenterX;\n    }\n\n    public set transformCenterX(value: number) {\n        if (this._transformCenterX === value) {\n            return;\n        }\n\n        this._transformCenterX = value;\n        this._markAsDirty();\n        this._markMatrixAsDirty();\n    }\n\n    /**\n     * Gets or sets the horizontal alignment\n     * @see https://doc.babylonjs.com/how_to/gui#alignments\n     */\n    public get horizontalAlignment(): number {\n        return this._horizontalAlignment;\n    }\n\n    public set horizontalAlignment(value: number) {\n        if (this._horizontalAlignment === value) {\n            return;\n        }\n\n        this._horizontalAlignment = value;\n        this._markAsDirty();\n    }\n\n    /**\n     * Gets or sets the vertical alignment\n     * @see https://doc.babylonjs.com/how_to/gui#alignments\n     */\n    public get verticalAlignment(): number {\n        return this._verticalAlignment;\n    }\n\n    public set verticalAlignment(value: number) {\n        if (this._verticalAlignment === value) {\n            return;\n        }\n\n        this._verticalAlignment = value;\n        this._markAsDirty();\n    }\n\n    /**\n     * Gets or sets a fixed ratio for this control.\n     * When different from 0, the ratio is used to compute the \"second\" dimension.\n     * The first dimension used in the computation is the last one set (by setting width / widthInPixels or height / heightInPixels), and the\n     * second dimension is computed as first dimension * fixedRatio\n     */\n    public fixedRatio = 0;\n\n    private _fixedRatioMasterIsWidth = true;\n\n    /**\n     * Gets or sets control width\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get width(): string | number {\n        return this._width.toString(this._host);\n    }\n\n    public set width(value: string | number) {\n        this._fixedRatioMasterIsWidth = true;\n\n        if (this._width.toString(this._host) === value) {\n            return;\n        }\n\n        if (this._width.fromString(value)) {\n            this._markAsDirty();\n        }\n    }\n\n    /**\n     * Gets or sets the control width in pixel\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get widthInPixels(): number {\n        return this._width.getValueInPixel(this._host, this._cachedParentMeasure.width);\n    }\n\n    public set widthInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this._fixedRatioMasterIsWidth = true;\n        this.width = value + \"px\";\n    }\n\n    /**\n     * Gets or sets control height\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get height(): string | number {\n        return this._height.toString(this._host);\n    }\n\n    public set height(value: string | number) {\n        this._fixedRatioMasterIsWidth = false;\n\n        if (this._height.toString(this._host) === value) {\n            return;\n        }\n\n        if (this._height.fromString(value)) {\n            this._markAsDirty();\n        }\n    }\n\n    /**\n     * Gets or sets control height in pixel\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get heightInPixels(): number {\n        return this._height.getValueInPixel(this._host, this._cachedParentMeasure.height);\n    }\n\n    public set heightInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this._fixedRatioMasterIsWidth = false;\n        this.height = value + \"px\";\n    }\n\n    /** Gets or set font family */\n    public get fontFamily(): string {\n        if (!this._fontSet) {\n            return \"\";\n        }\n        return this._fontFamily;\n    }\n\n    public set fontFamily(value: string) {\n        if (this._fontFamily === value) {\n            return;\n        }\n\n        this._fontFamily = value;\n        this._resetFontCache();\n    }\n\n    /** Gets or sets font style */\n    public get fontStyle(): string {\n        return this._fontStyle;\n    }\n\n    public set fontStyle(value: string) {\n        if (this._fontStyle === value) {\n            return;\n        }\n\n        this._fontStyle = value;\n        this._resetFontCache();\n    }\n\n    /** Gets or sets font weight */\n    public get fontWeight(): string {\n        return this._fontWeight;\n    }\n\n    public set fontWeight(value: string) {\n        if (this._fontWeight === value) {\n            return;\n        }\n\n        this._fontWeight = value;\n        this._resetFontCache();\n    }\n\n    /**\n     * Gets or sets style\n     * @see https://doc.babylonjs.com/how_to/gui#styles\n     */\n    public get style(): Nullable<Style> {\n        return this._style;\n    }\n\n    public set style(value: Nullable<Style>) {\n        if (this._style) {\n            this._style.onChangedObservable.remove(this._styleObserver);\n            this._styleObserver = null;\n        }\n\n        this._style = value;\n\n        if (this._style) {\n            this._styleObserver = this._style.onChangedObservable.add(() => {\n                this._markAsDirty();\n                this._resetFontCache();\n            });\n        }\n\n        this._markAsDirty();\n        this._resetFontCache();\n    }\n\n    /** @hidden */\n    public get _isFontSizeInPercentage(): boolean {\n        return this._fontSize.isPercentage;\n    }\n\n    /** Gets or sets font size in pixels */\n    public get fontSizeInPixels(): number {\n        let fontSizeToUse = this._style ? this._style._fontSize : this._fontSize;\n\n        if (fontSizeToUse.isPixel) {\n            return fontSizeToUse.getValue(this._host);\n        }\n\n        return fontSizeToUse.getValueInPixel(this._host, this._tempParentMeasure.height || this._cachedParentMeasure.height);\n    }\n\n    public set fontSizeInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this.fontSize = value + \"px\";\n    }\n\n    /** Gets or sets font size */\n    public get fontSize(): string | number {\n        return this._fontSize.toString(this._host);\n    }\n\n    public set fontSize(value: string | number) {\n        if (this._fontSize.toString(this._host) === value) {\n            return;\n        }\n\n        if (this._fontSize.fromString(value)) {\n            this._markAsDirty();\n            this._resetFontCache();\n        }\n    }\n\n    /** Gets or sets foreground color */\n    public get color(): string {\n        return this._color;\n    }\n\n    public set color(value: string) {\n        if (this._color === value) {\n            return;\n        }\n\n        this._color = value;\n        this._markAsDirty();\n    }\n\n    /** Gets or sets z index which is used to reorder controls on the z axis */\n    public get zIndex(): number {\n        return this._zIndex;\n    }\n\n    public set zIndex(value: number) {\n        if (this.zIndex === value) {\n            return;\n        }\n\n        this._zIndex = value;\n\n        if (this.parent) {\n            this.parent._reOrderControl(this);\n        }\n    }\n\n    /** Gets or sets a boolean indicating if the control can be rendered */\n    public get notRenderable(): boolean {\n        return this._doNotRender;\n    }\n\n    public set notRenderable(value: boolean) {\n        if (this._doNotRender === value) {\n            return;\n        }\n\n        this._doNotRender = value;\n        this._markAsDirty();\n    }\n\n    /** Gets or sets a boolean indicating if the control is visible */\n    public get isVisible(): boolean {\n        return this._isVisible;\n    }\n\n    public set isVisible(value: boolean) {\n        if (this._isVisible === value) {\n            return;\n        }\n\n        this._isVisible = value;\n        this._markAsDirty(true);\n    }\n\n    /** Gets a boolean indicating that the control needs to update its rendering */\n    public get isDirty(): boolean {\n        return this._isDirty;\n    }\n\n    /**\n     * Gets the current linked mesh (or null if none)\n     */\n    public get linkedMesh(): Nullable<TransformNode> {\n        return this._linkedMesh;\n    }\n\n    /**\n     * Gets or sets a value indicating the padding to use on the left of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get paddingLeft(): string | number {\n        return this._paddingLeft.toString(this._host);\n    }\n\n    public set paddingLeft(value: string | number) {\n        if (this._paddingLeft.fromString(value)) {\n            this._markAsDirty();\n        }\n    }\n\n    /**\n     * Gets or sets a value indicating the padding in pixels to use on the left of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get paddingLeftInPixels(): number {\n        return this._paddingLeft.getValueInPixel(this._host, this._cachedParentMeasure.width);\n    }\n\n    public set paddingLeftInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this.paddingLeft = value + \"px\";\n    }\n\n    /**\n     * Gets or sets a value indicating the padding to use on the right of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get paddingRight(): string | number {\n        return this._paddingRight.toString(this._host);\n    }\n\n    public set paddingRight(value: string | number) {\n        if (this._paddingRight.fromString(value)) {\n            this._markAsDirty();\n        }\n    }\n\n    /**\n     * Gets or sets a value indicating the padding in pixels to use on the right of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get paddingRightInPixels(): number {\n        return this._paddingRight.getValueInPixel(this._host, this._cachedParentMeasure.width);\n    }\n\n    public set paddingRightInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this.paddingRight = value + \"px\";\n    }\n\n    /**\n     * Gets or sets a value indicating the padding to use on the top of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get paddingTop(): string | number {\n        return this._paddingTop.toString(this._host);\n    }\n\n    public set paddingTop(value: string | number) {\n        if (this._paddingTop.fromString(value)) {\n            this._markAsDirty();\n        }\n    }\n\n    /**\n     * Gets or sets a value indicating the padding in pixels to use on the top of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get paddingTopInPixels(): number {\n        return this._paddingTop.getValueInPixel(this._host, this._cachedParentMeasure.height);\n    }\n\n    public set paddingTopInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this.paddingTop = value + \"px\";\n    }\n\n    /**\n     * Gets or sets a value indicating the padding to use on the bottom of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get paddingBottom(): string | number {\n        return this._paddingBottom.toString(this._host);\n    }\n\n    public set paddingBottom(value: string | number) {\n        if (this._paddingBottom.fromString(value)) {\n            this._markAsDirty();\n        }\n    }\n\n    /**\n     * Gets or sets a value indicating the padding in pixels to use on the bottom of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get paddingBottomInPixels(): number {\n        return this._paddingBottom.getValueInPixel(this._host, this._cachedParentMeasure.height);\n    }\n\n    public set paddingBottomInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this.paddingBottom = value + \"px\";\n    }\n\n    /**\n     * Gets or sets a value indicating the left coordinate of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get left(): string | number {\n        return this._left.toString(this._host);\n    }\n\n    public set left(value: string | number) {\n        if (this._left.fromString(value)) {\n            this._markAsDirty();\n        }\n    }\n\n    /**\n     * Gets or sets a value indicating the left coordinate in pixels of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get leftInPixels(): number {\n        return this._left.getValueInPixel(this._host, this._cachedParentMeasure.width);\n    }\n\n    public set leftInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this.left = value + \"px\";\n    }\n\n    /**\n     * Gets or sets a value indicating the top coordinate of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get top(): string | number {\n        return this._top.toString(this._host);\n    }\n\n    public set top(value: string | number) {\n        if (this._top.fromString(value)) {\n            this._markAsDirty();\n        }\n    }\n\n    /**\n     * Gets or sets a value indicating the top coordinate in pixels of the control\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    public get topInPixels(): number {\n        return this._top.getValueInPixel(this._host, this._cachedParentMeasure.height);\n    }\n\n    public set topInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this.top = value + \"px\";\n    }\n\n    /**\n     * Gets or sets a value indicating the offset on X axis to the linked mesh\n     * @see https://doc.babylonjs.com/how_to/gui#tracking-positions\n     */\n    public get linkOffsetX(): string | number {\n        return this._linkOffsetX.toString(this._host);\n    }\n\n    public set linkOffsetX(value: string | number) {\n        if (this._linkOffsetX.fromString(value)) {\n            this._markAsDirty();\n        }\n    }\n\n    /**\n     * Gets or sets a value indicating the offset in pixels on X axis to the linked mesh\n     * @see https://doc.babylonjs.com/how_to/gui#tracking-positions\n     */\n    public get linkOffsetXInPixels(): number {\n        return this._linkOffsetX.getValueInPixel(this._host, this._cachedParentMeasure.width);\n    }\n\n    public set linkOffsetXInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this.linkOffsetX = value + \"px\";\n    }\n\n    /**\n     * Gets or sets a value indicating the offset on Y axis to the linked mesh\n     * @see https://doc.babylonjs.com/how_to/gui#tracking-positions\n     */\n    public get linkOffsetY(): string | number {\n        return this._linkOffsetY.toString(this._host);\n    }\n\n    public set linkOffsetY(value: string | number) {\n        if (this._linkOffsetY.fromString(value)) {\n            this._markAsDirty();\n        }\n    }\n\n    /**\n     * Gets or sets a value indicating the offset in pixels on Y axis to the linked mesh\n     * @see https://doc.babylonjs.com/how_to/gui#tracking-positions\n     */\n    public get linkOffsetYInPixels(): number {\n        return this._linkOffsetY.getValueInPixel(this._host, this._cachedParentMeasure.height);\n    }\n\n    public set linkOffsetYInPixels(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        this.linkOffsetY = value + \"px\";\n    }\n\n    /** Gets the center coordinate on X axis */\n    public get centerX(): number {\n        return this._currentMeasure.left + this._currentMeasure.width / 2;\n    }\n\n    /** Gets the center coordinate on Y axis */\n    public get centerY(): number {\n        return this._currentMeasure.top + this._currentMeasure.height / 2;\n    }\n\n    /** Gets or sets if control is Enabled*/\n    public get isEnabled(): boolean {\n        return this._isEnabled;\n    }\n\n    public set isEnabled(value: boolean) {\n        if (this._isEnabled === value) {\n            return;\n        }\n\n        this._isEnabled = value;\n        this._markAsDirty();\n    }\n    /** Gets or sets background color of control if it's disabled*/\n    public get disabledColor(): string {\n        return this._disabledColor;\n    }\n\n    public set disabledColor(value: string) {\n        if (this._disabledColor === value) {\n            return;\n        }\n\n        this._disabledColor = value;\n        this._markAsDirty();\n    }\n    /** Gets or sets front color of control if it's disabled*/\n    public get disabledColorItem(): string {\n        return this._disabledColorItem;\n    }\n\n    public set disabledColorItem(value: string) {\n        if (this._disabledColorItem === value) {\n            return;\n        }\n\n        this._disabledColorItem = value;\n        this._markAsDirty();\n    }\n    // Functions\n\n    /**\n     * Creates a new control\n     * @param name defines the name of the control\n     */\n    constructor(\n        /** defines the name of the control */\n        public name?: string) {\n    }\n\n    /** @hidden */\n    protected _getTypeName(): string {\n        return \"Control\";\n    }\n\n    /**\n     * Gets the first ascendant in the hierarchy of the given type\n     * @param className defines the required type\n     * @returns the ascendant or null if not found\n     */\n    public getAscendantOfClass(className: string): Nullable<Control> {\n        if (!this.parent) {\n            return null;\n        }\n\n        if (this.parent.getClassName() === className) {\n            return this.parent;\n        }\n\n        return this.parent.getAscendantOfClass(className);\n    }\n\n    /** @hidden */\n    public _resetFontCache(): void {\n        this._fontSet = true;\n        this._markAsDirty();\n    }\n\n    /**\n     * Determines if a container is an ascendant of the current control\n     * @param container defines the container to look for\n     * @returns true if the container is one of the ascendant of the control\n     */\n    public isAscendant(container: Control): boolean {\n        if (!this.parent) {\n            return false;\n        }\n\n        if (this.parent === container) {\n            return true;\n        }\n\n        return this.parent.isAscendant(container);\n    }\n\n    /**\n     * Gets coordinates in local control space\n     * @param globalCoordinates defines the coordinates to transform\n     * @returns the new coordinates in local space\n     */\n    public getLocalCoordinates(globalCoordinates: Vector2): Vector2 {\n        var result = Vector2.Zero();\n\n        this.getLocalCoordinatesToRef(globalCoordinates, result);\n\n        return result;\n    }\n\n    /**\n     * Gets coordinates in local control space\n     * @param globalCoordinates defines the coordinates to transform\n     * @param result defines the target vector2 where to store the result\n     * @returns the current control\n     */\n    public getLocalCoordinatesToRef(globalCoordinates: Vector2, result: Vector2): Control {\n        result.x = globalCoordinates.x - this._currentMeasure.left;\n        result.y = globalCoordinates.y - this._currentMeasure.top;\n        return this;\n    }\n\n    /**\n     * Gets coordinates in parent local control space\n     * @param globalCoordinates defines the coordinates to transform\n     * @returns the new coordinates in parent local space\n     */\n    public getParentLocalCoordinates(globalCoordinates: Vector2): Vector2 {\n        var result = Vector2.Zero();\n\n        result.x = globalCoordinates.x - this._cachedParentMeasure.left;\n        result.y = globalCoordinates.y - this._cachedParentMeasure.top;\n\n        return result;\n    }\n\n    /**\n     * Move the current control to a vector3 position projected onto the screen.\n     * @param position defines the target position\n     * @param scene defines the hosting scene\n     */\n    public moveToVector3(position: Vector3, scene: Scene): void {\n        if (!this._host || this.parent !== this._host._rootContainer) {\n            Tools.Error(\"Cannot move a control to a vector3 if the control is not at root level\");\n            return;\n        }\n\n        this.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        this.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n\n        var globalViewport = this._host._getGlobalViewport(scene);\n        var projectedPosition = Vector3.Project(position, Matrix.Identity(), scene.getTransformMatrix(), globalViewport);\n\n        this._moveToProjectedPosition(projectedPosition);\n\n        if (projectedPosition.z < 0 || projectedPosition.z > 1) {\n            this.notRenderable = true;\n            return;\n        }\n        this.notRenderable = false;\n    }\n\n    /**\n     * Will store all controls that have this control as ascendant in a given array\n     * @param results defines the array where to store the descendants\n     * @param directDescendantsOnly defines if true only direct descendants of 'this' will be considered, if false direct and also indirect (children of children, an so on in a recursive manner) descendants of 'this' will be considered\n     * @param predicate defines an optional predicate that will be called on every evaluated child, the predicate must return true for a given child to be part of the result, otherwise it will be ignored\n     */\n    public getDescendantsToRef(results: Control[], directDescendantsOnly: boolean = false, predicate?: (control: Control) => boolean): void {\n        // Do nothing by default\n    }\n\n    /**\n     * Will return all controls that have this control as ascendant\n     * @param directDescendantsOnly defines if true only direct descendants of 'this' will be considered, if false direct and also indirect (children of children, an so on in a recursive manner) descendants of 'this' will be considered\n     * @param predicate defines an optional predicate that will be called on every evaluated child, the predicate must return true for a given child to be part of the result, otherwise it will be ignored\n     * @return all child controls\n     */\n    public getDescendants(directDescendantsOnly?: boolean, predicate?: (control: Control) => boolean): Control[] {\n        var results = new Array<Control>();\n\n        this.getDescendantsToRef(results, directDescendantsOnly, predicate);\n\n        return results;\n    }\n\n    /**\n     * Link current control with a target mesh\n     * @param mesh defines the mesh to link with\n     * @see https://doc.babylonjs.com/how_to/gui#tracking-positions\n     */\n    public linkWithMesh(mesh: Nullable<TransformNode>): void {\n        if (!this._host || this.parent && this.parent !== this._host._rootContainer) {\n            if (mesh) {\n                Tools.Error(\"Cannot link a control to a mesh if the control is not at root level\");\n            }\n            return;\n        }\n\n        var index = this._host._linkedControls.indexOf(this);\n        if (index !== -1) {\n            this._linkedMesh = mesh;\n            if (!mesh) {\n                this._host._linkedControls.splice(index, 1);\n            }\n            return;\n        } else if (!mesh) {\n            return;\n        }\n\n        this.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        this.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        this._linkedMesh = mesh;\n        this._host._linkedControls.push(this);\n    }\n\n    /** @hidden */\n    public _moveToProjectedPosition(projectedPosition: Vector3): void {\n        let oldLeft = this._left.getValue(this._host);\n        let oldTop = this._top.getValue(this._host);\n\n        var newLeft = ((projectedPosition.x + this._linkOffsetX.getValue(this._host)) - this._currentMeasure.width / 2);\n        var newTop = ((projectedPosition.y + this._linkOffsetY.getValue(this._host)) - this._currentMeasure.height / 2);\n\n        if (this._left.ignoreAdaptiveScaling && this._top.ignoreAdaptiveScaling) {\n            if (Math.abs(newLeft - oldLeft) < 0.5) {\n                newLeft = oldLeft;\n            }\n\n            if (Math.abs(newTop - oldTop) < 0.5) {\n                newTop = oldTop;\n            }\n        }\n\n        this.left = newLeft + \"px\";\n        this.top = newTop + \"px\";\n\n        this._left.ignoreAdaptiveScaling = true;\n        this._top.ignoreAdaptiveScaling = true;\n        this._markAsDirty();\n    }\n\n    /** @hidden */\n    public _offsetLeft(offset: number) {\n        this._isDirty = true;\n        this._currentMeasure.left += offset;\n    }\n\n    /** @hidden */\n    public _offsetTop(offset: number) {\n        this._isDirty = true;\n        this._currentMeasure.top += offset;\n    }\n\n    /** @hidden */\n    public _markMatrixAsDirty(): void {\n        this._isMatrixDirty = true;\n        this._flagDescendantsAsMatrixDirty();\n    }\n\n    /** @hidden */\n    public _flagDescendantsAsMatrixDirty(): void {\n        // No child\n    }\n\n    /** @hidden */\n    public _intersectsRect(rect: Measure) {\n        // Rotate the control's current measure into local space and check if it intersects the passed in rectangle\n        this._currentMeasure.transformToRef(this._transformMatrix, this._tmpMeasureA);\n        if (this._tmpMeasureA.left >= rect.left + rect.width) {\n            return false;\n        }\n\n        if (this._tmpMeasureA.top >= rect.top + rect.height) {\n            return false;\n        }\n\n        if (this._tmpMeasureA.left + this._tmpMeasureA.width <= rect.left) {\n            return false;\n        }\n\n        if (this._tmpMeasureA.top + this._tmpMeasureA.height <= rect.top) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /** @hidden */\n    protected invalidateRect() {\n        this._transform();\n        if (this.host && this.host.useInvalidateRectOptimization) {\n            // Rotate by transform to get the measure transformed to global space\n            this._currentMeasure.transformToRef(this._transformMatrix, this._tmpMeasureA);\n            // get the boudning box of the current measure and last frames measure in global space and invalidate it\n            // the previous measure is used to properly clear a control that is scaled down\n            Measure.CombineToRef(this._tmpMeasureA, this._prevCurrentMeasureTransformedIntoGlobalSpace, this._tmpMeasureA);\n\n            if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n                // Expand rect based on shadows\n                var shadowOffsetX = this.shadowOffsetX;\n                var shadowOffsetY = this.shadowOffsetY;\n                var shadowBlur = this.shadowBlur;\n\n                var leftShadowOffset = Math.min(Math.min(shadowOffsetX, 0) - shadowBlur * 2, 0);\n                var rightShadowOffset = Math.max(Math.max(shadowOffsetX, 0) + shadowBlur * 2, 0);\n                var topShadowOffset = Math.min(Math.min(shadowOffsetY, 0) - shadowBlur * 2, 0);\n                var bottomShadowOffset = Math.max(Math.max(shadowOffsetY, 0) + shadowBlur * 2, 0);\n\n                this.host.invalidateRect(\n                    Math.floor(this._tmpMeasureA.left + leftShadowOffset),\n                    Math.floor(this._tmpMeasureA.top + topShadowOffset),\n                    Math.ceil(this._tmpMeasureA.left + this._tmpMeasureA.width + rightShadowOffset),\n                    Math.ceil(this._tmpMeasureA.top + this._tmpMeasureA.height + bottomShadowOffset),\n                );\n            } else {\n                this.host.invalidateRect(\n                    Math.floor(this._tmpMeasureA.left),\n                    Math.floor(this._tmpMeasureA.top),\n                    Math.ceil(this._tmpMeasureA.left + this._tmpMeasureA.width),\n                    Math.ceil(this._tmpMeasureA.top + this._tmpMeasureA.height),\n                );\n            }\n\n        }\n    }\n\n    /** @hidden */\n    public _markAsDirty(force = false): void {\n        if (!this._isVisible && !force) {\n            return;\n        }\n\n        this._isDirty = true;\n\n        // Redraw only this rectangle\n        if (this._host) {\n            this._host.markAsDirty();\n        }\n    }\n\n    /** @hidden */\n    public _markAllAsDirty(): void {\n        this._markAsDirty();\n\n        if (this._font) {\n            this._prepareFont();\n        }\n    }\n\n    /** @hidden */\n    public _link(host: AdvancedDynamicTexture): void {\n        this._host = host;\n        if (this._host) {\n            this.uniqueId = this._host.getScene()!.getUniqueId();\n        }\n    }\n\n    /** @hidden */\n    protected _transform(context?: CanvasRenderingContext2D): void {\n        if (!this._isMatrixDirty && this._scaleX === 1 && this._scaleY === 1 && this._rotation === 0) {\n            return;\n        }\n\n        // postTranslate\n        var offsetX = this._currentMeasure.width * this._transformCenterX + this._currentMeasure.left;\n        var offsetY = this._currentMeasure.height * this._transformCenterY + this._currentMeasure.top;\n        if (context) {\n            context.translate(offsetX, offsetY);\n\n            // rotate\n            context.rotate(this._rotation);\n\n            // scale\n            context.scale(this._scaleX, this._scaleY);\n\n            // preTranslate\n            context.translate(-offsetX, -offsetY);\n        }\n        // Need to update matrices?\n        if (this._isMatrixDirty || this._cachedOffsetX !== offsetX || this._cachedOffsetY !== offsetY) {\n            this._cachedOffsetX = offsetX;\n            this._cachedOffsetY = offsetY;\n            this._isMatrixDirty = false;\n            this._flagDescendantsAsMatrixDirty();\n\n            Matrix2D.ComposeToRef(-offsetX, -offsetY, this._rotation, this._scaleX, this._scaleY, this.parent ? this.parent._transformMatrix : null, this._transformMatrix);\n\n            this._transformMatrix.invertToRef(this._invertTransformMatrix);\n        }\n    }\n\n    /** @hidden */\n    public _renderHighlight(context: CanvasRenderingContext2D): void {\n        if (!this.isHighlighted) {\n            return;\n        }\n\n        context.save();\n        context.strokeStyle = \"#4affff\";\n        context.lineWidth = 2;\n\n        this._renderHighlightSpecific(context);\n        context.restore();\n    }\n\n    /** @hidden */\n    public _renderHighlightSpecific(context: CanvasRenderingContext2D): void {\n        context.strokeRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n    }\n\n    /** @hidden */\n    protected _applyStates(context: CanvasRenderingContext2D): void {\n        if (this._isFontSizeInPercentage) {\n            this._fontSet = true;\n        }\n\n        if (this._fontSet) {\n            this._prepareFont();\n            this._fontSet = false;\n        }\n\n        if (this._font) {\n            context.font = this._font;\n        }\n\n        if (this._color) {\n            context.fillStyle = this._color;\n        }\n\n        if (Control.AllowAlphaInheritance) {\n            context.globalAlpha *= this._alpha;\n        } else if (this._alphaSet) {\n            context.globalAlpha = this.parent ? this.parent.alpha * this._alpha : this._alpha;\n        }\n    }\n\n    /** @hidden */\n    public _layout(parentMeasure: Measure, context: CanvasRenderingContext2D): boolean {\n        if (!this.isDirty && (!this.isVisible || this.notRenderable)) {\n            return false;\n        }\n\n        if (this._isDirty || !this._cachedParentMeasure.isEqualsTo(parentMeasure)) {\n            this.host._numLayoutCalls++;\n\n            this._currentMeasure.addAndTransformToRef(this._transformMatrix,\n                -this.paddingLeftInPixels | 0,\n                -this.paddingTopInPixels | 0,\n                this.paddingRightInPixels | 0,\n                this.paddingBottomInPixels | 0,\n                this._prevCurrentMeasureTransformedIntoGlobalSpace);\n\n            context.save();\n\n            this._applyStates(context);\n\n            let rebuildCount = 0;\n            do {\n                this._rebuildLayout = false;\n                this._processMeasures(parentMeasure, context);\n                rebuildCount++;\n            }\n            while (this._rebuildLayout && rebuildCount < 3);\n\n            if (rebuildCount >= 3) {\n                Logger.Error(`Layout cycle detected in GUI (Control name=${this.name}, uniqueId=${this.uniqueId})`);\n            }\n\n            context.restore();\n            this.invalidateRect();\n            this._evaluateClippingState(parentMeasure);\n        }\n\n        this._wasDirty = this._isDirty;\n        this._isDirty = false;\n\n        return true;\n    }\n\n    /** @hidden */\n    protected _processMeasures(parentMeasure: Measure, context: CanvasRenderingContext2D): void {\n        this._currentMeasure.copyFrom(parentMeasure);\n\n        // Let children take some pre-measurement actions\n        this._preMeasure(parentMeasure, context);\n\n        this._measure();\n        this._computeAlignment(parentMeasure, context);\n\n        // Convert to int values\n        this._currentMeasure.left = this._currentMeasure.left | 0;\n        this._currentMeasure.top = this._currentMeasure.top | 0;\n        this._currentMeasure.width = this._currentMeasure.width | 0;\n        this._currentMeasure.height = this._currentMeasure.height | 0;\n\n        // Let children add more features\n        this._additionalProcessing(parentMeasure, context);\n\n        this._cachedParentMeasure.copyFrom(parentMeasure);\n\n        if (this.onDirtyObservable.hasObservers()) {\n            this.onDirtyObservable.notifyObservers(this);\n        }\n    }\n\n    protected _evaluateClippingState(parentMeasure: Measure) {\n        if (this.parent && this.parent.clipChildren) {\n            // Early clip\n            if (this._currentMeasure.left > parentMeasure.left + parentMeasure.width) {\n                this._isClipped = true;\n                return;\n            }\n\n            if (this._currentMeasure.left + this._currentMeasure.width < parentMeasure.left) {\n                this._isClipped = true;\n                return;\n            }\n\n            if (this._currentMeasure.top > parentMeasure.top + parentMeasure.height) {\n                this._isClipped = true;\n                return;\n            }\n\n            if (this._currentMeasure.top + this._currentMeasure.height < parentMeasure.top) {\n                this._isClipped = true;\n                return;\n            }\n        }\n\n        this._isClipped = false;\n    }\n\n    /** @hidden */\n    public _measure(): void {\n        // Width / Height\n        if (this._width.isPixel) {\n            this._currentMeasure.width = this._width.getValue(this._host);\n        } else {\n            this._currentMeasure.width *= this._width.getValue(this._host);\n        }\n\n        if (this._height.isPixel) {\n            this._currentMeasure.height = this._height.getValue(this._host);\n        } else {\n            this._currentMeasure.height *= this._height.getValue(this._host);\n        }\n\n        if (this.fixedRatio !== 0) {\n            if (this._fixedRatioMasterIsWidth) {\n                this._currentMeasure.height = this._currentMeasure.width * this.fixedRatio;\n            } else {\n                this._currentMeasure.width = this._currentMeasure.height * this.fixedRatio;\n            }\n        }\n    }\n\n    /** @hidden */\n    protected _computeAlignment(parentMeasure: Measure, context: CanvasRenderingContext2D): void {\n        var width = this._currentMeasure.width;\n        var height = this._currentMeasure.height;\n\n        var parentWidth = parentMeasure.width;\n        var parentHeight = parentMeasure.height;\n\n        // Left / top\n        var x = 0;\n        var y = 0;\n\n        switch (this.horizontalAlignment) {\n            case Control.HORIZONTAL_ALIGNMENT_LEFT:\n                x = 0;\n                break;\n            case Control.HORIZONTAL_ALIGNMENT_RIGHT:\n                x = parentWidth - width;\n                break;\n            case Control.HORIZONTAL_ALIGNMENT_CENTER:\n                x = (parentWidth - width) / 2;\n                break;\n        }\n\n        switch (this.verticalAlignment) {\n            case Control.VERTICAL_ALIGNMENT_TOP:\n                y = 0;\n                break;\n            case Control.VERTICAL_ALIGNMENT_BOTTOM:\n                y = parentHeight - height;\n                break;\n            case Control.VERTICAL_ALIGNMENT_CENTER:\n                y = (parentHeight - height) / 2;\n                break;\n        }\n\n        if (this._paddingLeft.isPixel) {\n            this._currentMeasure.left += this._paddingLeft.getValue(this._host);\n            this._currentMeasure.width -= this._paddingLeft.getValue(this._host);\n        } else {\n            this._currentMeasure.left += parentWidth * this._paddingLeft.getValue(this._host);\n            this._currentMeasure.width -= parentWidth * this._paddingLeft.getValue(this._host);\n        }\n\n        if (this._paddingRight.isPixel) {\n            this._currentMeasure.width -= this._paddingRight.getValue(this._host);\n        } else {\n            this._currentMeasure.width -= parentWidth * this._paddingRight.getValue(this._host);\n        }\n\n        if (this._paddingTop.isPixel) {\n            this._currentMeasure.top += this._paddingTop.getValue(this._host);\n            this._currentMeasure.height -= this._paddingTop.getValue(this._host);\n        } else {\n            this._currentMeasure.top += parentHeight * this._paddingTop.getValue(this._host);\n            this._currentMeasure.height -= parentHeight * this._paddingTop.getValue(this._host);\n        }\n\n        if (this._paddingBottom.isPixel) {\n            this._currentMeasure.height -= this._paddingBottom.getValue(this._host);\n        } else {\n            this._currentMeasure.height -= parentHeight * this._paddingBottom.getValue(this._host);\n        }\n\n        if (this._left.isPixel) {\n            this._currentMeasure.left += this._left.getValue(this._host);\n        } else {\n            this._currentMeasure.left += parentWidth * this._left.getValue(this._host);\n        }\n\n        if (this._top.isPixel) {\n            this._currentMeasure.top += this._top.getValue(this._host);\n        } else {\n            this._currentMeasure.top += parentHeight * this._top.getValue(this._host);\n        }\n\n        this._currentMeasure.left += x;\n        this._currentMeasure.top += y;\n    }\n\n    /** @hidden */\n    protected _preMeasure(parentMeasure: Measure, context: CanvasRenderingContext2D): void {\n        // Do nothing\n    }\n\n    /** @hidden */\n    protected _additionalProcessing(parentMeasure: Measure, context: CanvasRenderingContext2D): void {\n        // Do nothing\n    }\n\n    /** @hidden */\n    protected _clipForChildren(context: CanvasRenderingContext2D): void {\n        // DO nothing\n    }\n\n    private static _ClipMeasure = new Measure(0, 0, 0, 0);\n    private _tmpMeasureA = new Measure(0, 0, 0, 0);\n    private _clip(context: CanvasRenderingContext2D, invalidatedRectangle?: Nullable<Measure>) {\n        context.beginPath();\n        Control._ClipMeasure.copyFrom(this._currentMeasure);\n        if (invalidatedRectangle) {\n            // Rotate the invalidated rect into the control's space\n            invalidatedRectangle.transformToRef(this._invertTransformMatrix, this._tmpMeasureA);\n\n            // Get the intersection of the rect in context space and the current context\n            var intersection = new Measure(0, 0, 0, 0);\n            intersection.left = Math.max(this._tmpMeasureA.left, this._currentMeasure.left);\n            intersection.top = Math.max(this._tmpMeasureA.top, this._currentMeasure.top);\n            intersection.width = Math.min(this._tmpMeasureA.left + this._tmpMeasureA.width, this._currentMeasure.left + this._currentMeasure.width) - intersection.left;\n            intersection.height = Math.min(this._tmpMeasureA.top + this._tmpMeasureA.height, this._currentMeasure.top + this._currentMeasure.height) - intersection.top;\n            Control._ClipMeasure.copyFrom(intersection);\n        }\n\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            var shadowOffsetX = this.shadowOffsetX;\n            var shadowOffsetY = this.shadowOffsetY;\n            var shadowBlur = this.shadowBlur;\n\n            var leftShadowOffset = Math.min(Math.min(shadowOffsetX, 0) - shadowBlur * 2, 0);\n            var rightShadowOffset = Math.max(Math.max(shadowOffsetX, 0) + shadowBlur * 2, 0);\n            var topShadowOffset = Math.min(Math.min(shadowOffsetY, 0) - shadowBlur * 2, 0);\n            var bottomShadowOffset = Math.max(Math.max(shadowOffsetY, 0) + shadowBlur * 2, 0);\n\n            context.rect(\n                Control._ClipMeasure.left + leftShadowOffset,\n                Control._ClipMeasure.top + topShadowOffset,\n                Control._ClipMeasure.width + rightShadowOffset - leftShadowOffset,\n                Control._ClipMeasure.height + bottomShadowOffset - topShadowOffset\n            );\n        } else {\n            context.rect(Control._ClipMeasure.left, Control._ClipMeasure.top, Control._ClipMeasure.width, Control._ClipMeasure.height);\n        }\n\n        context.clip();\n    }\n\n    /** @hidden */\n    public _render(context: CanvasRenderingContext2D, invalidatedRectangle?: Nullable<Measure>): boolean {\n        if (!this.isVisible || this.notRenderable || this._isClipped) {\n            this._isDirty = false;\n            return false;\n        }\n\n        this.host._numRenderCalls++;\n\n        context.save();\n\n        this._applyStates(context);\n\n        // Transform\n        this._transform(context);\n\n        // Clip\n        if (this.clipContent) {\n            this._clip(context, invalidatedRectangle);\n        }\n\n        if (this.onBeforeDrawObservable.hasObservers()) {\n            this.onBeforeDrawObservable.notifyObservers(this);\n        }\n\n        if (this.useBitmapCache && !this._wasDirty && this._cacheData) {\n            context.putImageData(this._cacheData, this._currentMeasure.left, this._currentMeasure.top);\n        } else {\n            this._draw(context, invalidatedRectangle);\n        }\n\n        if (this.useBitmapCache && this._wasDirty) {\n            this._cacheData = context.getImageData(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n        }\n\n        this._renderHighlight(context);\n\n        if (this.onAfterDrawObservable.hasObservers()) {\n            this.onAfterDrawObservable.notifyObservers(this);\n        }\n\n        context.restore();\n\n        return true;\n    }\n\n    /** @hidden */\n    public _draw(context: CanvasRenderingContext2D, invalidatedRectangle?: Nullable<Measure>): void {\n        // Do nothing\n    }\n\n    /**\n     * Tests if a given coordinates belong to the current control\n     * @param x defines x coordinate to test\n     * @param y defines y coordinate to test\n     * @returns true if the coordinates are inside the control\n     */\n    public contains(x: number, y: number): boolean {\n        // Invert transform\n        this._invertTransformMatrix.transformCoordinates(x, y, this._transformedPosition);\n\n        x = this._transformedPosition.x;\n        y = this._transformedPosition.y;\n\n        // Check\n        if (x < this._currentMeasure.left) {\n            return false;\n        }\n\n        if (x > this._currentMeasure.left + this._currentMeasure.width) {\n            return false;\n        }\n\n        if (y < this._currentMeasure.top) {\n            return false;\n        }\n\n        if (y > this._currentMeasure.top + this._currentMeasure.height) {\n            return false;\n        }\n\n        if (this.isPointerBlocker) {\n            this._host._shouldBlockPointer = true;\n        }\n        return true;\n    }\n\n    /** @hidden */\n    public _processPicking(x: number, y: number, pi: PointerInfoBase, type: number, pointerId: number, buttonIndex: number, deltaX?: number, deltaY?: number): boolean {\n        if (!this._isEnabled) {\n            return false;\n        }\n        if (!this.isHitTestVisible || !this.isVisible || this._doNotRender) {\n            return false;\n        }\n\n        if (!this.contains(x, y)) {\n            return false;\n        }\n\n        this._processObservables(type, x, y, pi, pointerId, buttonIndex, deltaX, deltaY);\n\n        return true;\n    }\n\n    /** @hidden */\n    public _onPointerMove(target: Control, coordinates: Vector2, pointerId: number, pi: PointerInfoBase): void {\n        var canNotify: boolean = this.onPointerMoveObservable.notifyObservers(coordinates, -1, target, this, pi);\n\n        if (canNotify && this.parent != null) { this.parent._onPointerMove(target, coordinates, pointerId, pi); }\n    }\n\n    /** @hidden */\n    public _onPointerEnter(target: Control, pi: PointerInfoBase): boolean {\n        if (!this._isEnabled) {\n            return false;\n        }\n        if (this._enterCount > 0) {\n            return false;\n        }\n\n        if (this._enterCount === -1) { // -1 is for touch input, we are now sure we are with a mouse or pencil\n            this._enterCount = 0;\n        }\n        this._enterCount++;\n\n        var canNotify: boolean = this.onPointerEnterObservable.notifyObservers(this, -1, target, this, pi);\n\n        if (canNotify && this.parent != null) { this.parent._onPointerEnter(target, pi); }\n\n        return true;\n    }\n\n    /** @hidden */\n    public _onPointerOut(target: Control, pi: Nullable<PointerInfoBase>, force = false): void {\n        if (!force && (!this._isEnabled || target === this)) {\n            return;\n        }\n        this._enterCount = 0;\n\n        var canNotify: boolean = true;\n\n        if (!target.isAscendant(this)) {\n            canNotify = this.onPointerOutObservable.notifyObservers(this, -1, target, this, pi);\n        }\n\n        if (canNotify && this.parent != null) {\n            this.parent._onPointerOut(target, pi, force);\n        }\n    }\n\n    /** @hidden */\n    public _onPointerDown(target: Control, coordinates: Vector2, pointerId: number, buttonIndex: number, pi: PointerInfoBase): boolean {\n        // Prevent pointerout to lose control context.\n        // Event redundancy is checked inside the function.\n        this._onPointerEnter(this, pi);\n\n        if (this._downCount !== 0) {\n            return false;\n        }\n\n        this._downCount++;\n\n        this._downPointerIds[pointerId] = true;\n\n        var canNotify: boolean = this.onPointerDownObservable.notifyObservers(new Vector2WithInfo(coordinates, buttonIndex), -1, target, this, pi);\n\n        if (canNotify && this.parent != null) { this.parent._onPointerDown(target, coordinates, pointerId, buttonIndex, pi); }\n\n        return true;\n    }\n\n    /** @hidden */\n    public _onPointerUp(target: Control, coordinates: Vector2, pointerId: number, buttonIndex: number, notifyClick: boolean, pi?: PointerInfoBase): void {\n        if (!this._isEnabled) {\n            return;\n        }\n        this._downCount = 0;\n\n        delete this._downPointerIds[pointerId];\n\n        var canNotifyClick: boolean = notifyClick;\n        if (notifyClick && (this._enterCount > 0 || this._enterCount === -1)) {\n            canNotifyClick = this.onPointerClickObservable.notifyObservers(new Vector2WithInfo(coordinates, buttonIndex), -1, target, this, pi);\n        }\n        var canNotify: boolean = this.onPointerUpObservable.notifyObservers(new Vector2WithInfo(coordinates, buttonIndex), -1, target, this, pi);\n\n        if (canNotify && this.parent != null) { this.parent._onPointerUp(target, coordinates, pointerId, buttonIndex, canNotifyClick, pi); }\n    }\n\n    /** @hidden */\n    public _forcePointerUp(pointerId: Nullable<number> = null) {\n        if (pointerId !== null) {\n            this._onPointerUp(this, Vector2.Zero(), pointerId, 0, true);\n        } else {\n            for (var key in this._downPointerIds) {\n                this._onPointerUp(this, Vector2.Zero(), +key as number, 0, true);\n            }\n        }\n    }\n\n    /** @hidden */\n    public _onWheelScroll(deltaX?: number, deltaY?: number): void {\n        if (!this._isEnabled) {\n            return;\n        }\n        var canNotify: boolean = this.onWheelObservable.notifyObservers(new Vector2(deltaX, deltaY));\n\n        if (canNotify && this.parent != null) { this.parent._onWheelScroll(deltaX, deltaY); }\n    }\n\n    /** @hidden */\n    public _onCanvasBlur(): void {}\n\n    /** @hidden */\n    public _processObservables(type: number, x: number, y: number, pi: PointerInfoBase, pointerId: number, buttonIndex: number, deltaX?: number, deltaY?: number): boolean {\n        if (!this._isEnabled) {\n            return false;\n        }\n        this._dummyVector2.copyFromFloats(x, y);\n        if (type === PointerEventTypes.POINTERMOVE) {\n            this._onPointerMove(this, this._dummyVector2, pointerId, pi);\n\n            var previousControlOver = this._host._lastControlOver[pointerId];\n            if (previousControlOver && previousControlOver !== this) {\n                previousControlOver._onPointerOut(this, pi);\n            }\n\n            if (previousControlOver !== this) {\n                this._onPointerEnter(this, pi);\n            }\n\n            this._host._lastControlOver[pointerId] = this;\n            return true;\n        }\n\n        if (type === PointerEventTypes.POINTERDOWN) {\n            this._onPointerDown(this, this._dummyVector2, pointerId, buttonIndex, pi);\n            this._host._registerLastControlDown(this, pointerId);\n            this._host._lastPickedControl = this;\n            return true;\n        }\n\n        if (type === PointerEventTypes.POINTERUP) {\n            if (this._host._lastControlDown[pointerId]) {\n                this._host._lastControlDown[pointerId]._onPointerUp(this, this._dummyVector2, pointerId, buttonIndex, true, pi);\n            }\n            delete this._host._lastControlDown[pointerId];\n            return true;\n        }\n\n        if (type === PointerEventTypes.POINTERWHEEL) {\n            if (this._host._lastControlOver[pointerId]) {\n                this._host._lastControlOver[pointerId]._onWheelScroll(deltaX, deltaY);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _prepareFont() {\n        if (!this._font && !this._fontSet) {\n            return;\n        }\n\n        if (this._style) {\n            this._font = this._style.fontStyle + \" \" + this._style.fontWeight + \" \" + this.fontSizeInPixels + \"px \" + this._style.fontFamily;\n        } else {\n            this._font = this._fontStyle + \" \" + this._fontWeight + \" \" + this.fontSizeInPixels + \"px \" + this._fontFamily;\n        }\n\n        this._fontOffset = Control._GetFontOffset(this._font);\n    }\n\n    /** Releases associated resources */\n    public dispose() {\n        this.onDirtyObservable.clear();\n        this.onBeforeDrawObservable.clear();\n        this.onAfterDrawObservable.clear();\n        this.onPointerDownObservable.clear();\n        this.onPointerEnterObservable.clear();\n        this.onPointerMoveObservable.clear();\n        this.onPointerOutObservable.clear();\n        this.onPointerUpObservable.clear();\n        this.onPointerClickObservable.clear();\n        this.onWheelObservable.clear();\n\n        if (this._styleObserver && this._style) {\n            this._style.onChangedObservable.remove(this._styleObserver);\n            this._styleObserver = null;\n        }\n\n        if (this.parent) {\n            this.parent.removeControl(this);\n            this.parent = null;\n        }\n\n        if (this._host) {\n            var index = this._host._linkedControls.indexOf(this);\n            if (index > -1) {\n                this.linkWithMesh(null);\n            }\n        }\n\n        // Callback\n        this.onDisposeObservable.notifyObservers(this);\n        this.onDisposeObservable.clear();\n    }\n\n    // Statics\n    private static _HORIZONTAL_ALIGNMENT_LEFT = 0;\n    private static _HORIZONTAL_ALIGNMENT_RIGHT = 1;\n    private static _HORIZONTAL_ALIGNMENT_CENTER = 2;\n\n    private static _VERTICAL_ALIGNMENT_TOP = 0;\n    private static _VERTICAL_ALIGNMENT_BOTTOM = 1;\n    private static _VERTICAL_ALIGNMENT_CENTER = 2;\n\n    /** HORIZONTAL_ALIGNMENT_LEFT */\n    public static get HORIZONTAL_ALIGNMENT_LEFT(): number {\n        return Control._HORIZONTAL_ALIGNMENT_LEFT;\n    }\n\n    /** HORIZONTAL_ALIGNMENT_RIGHT */\n    public static get HORIZONTAL_ALIGNMENT_RIGHT(): number {\n        return Control._HORIZONTAL_ALIGNMENT_RIGHT;\n    }\n\n    /** HORIZONTAL_ALIGNMENT_CENTER */\n    public static get HORIZONTAL_ALIGNMENT_CENTER(): number {\n        return Control._HORIZONTAL_ALIGNMENT_CENTER;\n    }\n\n    /** VERTICAL_ALIGNMENT_TOP */\n    public static get VERTICAL_ALIGNMENT_TOP(): number {\n        return Control._VERTICAL_ALIGNMENT_TOP;\n    }\n\n    /** VERTICAL_ALIGNMENT_BOTTOM */\n    public static get VERTICAL_ALIGNMENT_BOTTOM(): number {\n        return Control._VERTICAL_ALIGNMENT_BOTTOM;\n    }\n\n    /** VERTICAL_ALIGNMENT_CENTER */\n    public static get VERTICAL_ALIGNMENT_CENTER(): number {\n        return Control._VERTICAL_ALIGNMENT_CENTER;\n    }\n\n    private static _FontHeightSizes: { [key: string]: { ascent: number, height: number, descent: number } } = {};\n\n    /** @hidden */\n    public static _GetFontOffset(font: string): { ascent: number, height: number, descent: number } {\n\n        if (Control._FontHeightSizes[font]) {\n            return Control._FontHeightSizes[font];\n        }\n\n        var text = document.createElement(\"span\");\n        text.innerHTML = \"Hg\";\n        text.style.font = font;\n\n        var block = document.createElement(\"div\");\n        block.style.display = \"inline-block\";\n        block.style.width = \"1px\";\n        block.style.height = \"0px\";\n        block.style.verticalAlign = \"bottom\";\n\n        var div = document.createElement(\"div\");\n        div.style.whiteSpace = \"nowrap\";\n        div.appendChild(text);\n        div.appendChild(block);\n\n        document.body.appendChild(div);\n\n        var fontAscent = 0;\n        var fontHeight = 0;\n        try {\n            fontHeight = block.getBoundingClientRect().top - text.getBoundingClientRect().top;\n            block.style.verticalAlign = \"baseline\";\n            fontAscent = block.getBoundingClientRect().top - text.getBoundingClientRect().top;\n        } finally {\n            document.body.removeChild(div);\n        }\n        var result = { ascent: fontAscent, height: fontHeight, descent: fontHeight - fontAscent };\n        Control._FontHeightSizes[font] = result;\n\n        return result;\n    }\n\n    /**\n     * Creates a stack panel that can be used to render headers\n     * @param control defines the control to associate with the header\n     * @param text defines the text of the header\n     * @param size defines the size of the header\n     * @param options defines options used to configure the header\n     * @returns a new StackPanel\n     * @ignore\n     * @hidden\n     */\n    public static AddHeader: (control: Control, text: string, size: string | number, options: { isHorizontal: boolean, controlFirst: boolean }) => any = () => { };\n\n    /** @hidden */\n    protected static drawEllipse(x: number, y: number, width: number, height: number, context: CanvasRenderingContext2D): void {\n        context.translate(x, y);\n        context.scale(width, height);\n\n        context.beginPath();\n        context.arc(0, 0, 1, 0, 2 * Math.PI);\n        context.closePath();\n\n        context.scale(1 / width, 1 / height);\n        context.translate(-x, -y);\n    }\n}\n_TypeStore.RegisteredTypes[\"BABYLON.GUI.Control\"] = Control;"]}