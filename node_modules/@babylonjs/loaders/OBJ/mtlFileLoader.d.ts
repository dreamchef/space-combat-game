import { StandardMaterial } from "@babylonjs/core/Materials/standardMaterial";
import { Scene } from "@babylonjs/core/scene";
/**
 * Class reading and parsing the MTL file bundled with the obj file.
 */
export declare class MTLFileLoader {
    /**
     * Invert Y-Axis of referenced textures on load
     */
    static INVERT_TEXTURE_Y: boolean;
    /**
     * All material loaded from the mtl will be set here
     */
    materials: StandardMaterial[];
    /**
     * This function will read the mtl file and create each material described inside
     * This function could be improve by adding :
     * -some component missing (Ni, Tf...)
     * -including the specific options available
     *
     * @param scene defines the scene the material will be created in
     * @param data defines the mtl data to parse
     * @param rootUrl defines the rooturl to use in order to load relative dependencies
     * @param forAssetContainer defines if the material should be registered in the scene
     */
    parseMTL(scene: Scene, data: string | ArrayBuffer, rootUrl: string, forAssetContainer: boolean): void;
    /**
     * Gets the texture for the material.
     *
     * If the material is imported from input file,
     * We sanitize the url to ensure it takes the textre from aside the material.
     *
     * @param rootUrl The root url to load from
     * @param value The value stored in the mtl
     * @return The Texture
     */
    private static _getTexture;
}
