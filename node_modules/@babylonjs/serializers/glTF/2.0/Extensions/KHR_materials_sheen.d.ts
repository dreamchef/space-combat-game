import { ITextureInfo, IMaterial } from "babylonjs-gltf2interface";
import { IGLTFExporterExtensionV2 } from "../glTFExporterExtension";
import { _Exporter } from "../glTFExporter";
import { Material } from '@babylonjs/core/Materials/material';
import { Texture } from '@babylonjs/core/Materials/Textures/texture';
import { BaseTexture } from '@babylonjs/core/Materials/Textures/baseTexture';
/**
 * @hidden
 */
export declare class KHR_materials_sheen implements IGLTFExporterExtensionV2 {
    /** Name of this extension */
    readonly name = "KHR_materials_sheen";
    /** Defines whether this extension is enabled */
    enabled: boolean;
    /** Defines whether this extension is required */
    required: boolean;
    /** Reference to the glTF exporter */
    private _textureInfos;
    private _exportedTextures;
    private _wasUsed;
    constructor(exporter: _Exporter);
    dispose(): void;
    /** @hidden */
    get wasUsed(): boolean;
    private _getTextureIndex;
    postExportTexture?(context: string, textureInfo: ITextureInfo, babylonTexture: Texture): void;
    postExportMaterialAdditionalTextures?(context: string, node: IMaterial, babylonMaterial: Material): BaseTexture[];
    postExportMaterialAsync?(context: string, node: IMaterial, babylonMaterial: Material): Promise<IMaterial>;
}
